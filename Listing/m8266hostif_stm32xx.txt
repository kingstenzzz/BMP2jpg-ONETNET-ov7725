; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\m8266hostif_stm32xx.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\m8266hostif_stm32xx.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS -I..\..\User -I..\..\Libraries\FWlib\inc -I..\..\User\FATFS\option -I..\..\User\FATFS -I..\..\User\delay -I..\..\User\onenet\inc -I..\..\User\device\inc -I..\..\User\EDP -I..\..\User\onenet\inc -I..\..\User\hwtimer -I..\..\User\JPEGENCODE -I..\..\User\MALLOC -I..\..\User\dht11 -I..\..\User\flame -I..\..\User\warning -I..\..\User\beep -I..\..\User\adc -I..\..\User\IIC -I..\..\Freee-RTOS\include -I..\..\Freee-RTOS\portable\RVDS\ARM_CM3 -I..\..\User\IWDG -I..\..\User\light_moto -I..\..\User\M8266WIFI -I.\RTE\_____ -IF:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -IF:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\..\output\m8266hostif_stm32xx.crf ..\..\User\M8266WIFI\M8266HostIf_STM32xx.c]
                          THUMB

                          AREA ||i.M8266HostIf_GPIO_CS_RESET_Init||, CODE, READONLY, ALIGN=2

                  M8266HostIf_GPIO_CS_RESET_Init PROC
;;;31      ***********************************************************************************/
;;;32     void M8266HostIf_GPIO_CS_RESET_Init(void)
000000  b508              PUSH     {r3,lr}
;;;33     {
;;;34       GPIO_InitTypeDef  GPIO_InitStructure;
;;;35     
;;;36     	//Initial STM32's GPIO for M8266WIFI_SPI_nCS
;;;37       M8266WIFI_SPI_nCS_GPIO_RCC_CLOCK_EN;  														// enable nCS GPIO clock
000002  2101              MOVS     r1,#1
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;38     	GPIO_OUTPUT_HIGH(M8266WIFI_SPI_nCS_GPIO,M8266WIFI_SPI_nCS_PIN);		// nCS output high initially	
00000a  2010              MOVS     r0,#0x10
00000c  4911              LDR      r1,|L1.84|
00000e  6008              STR      r0,[r1,#0]
;;;39     	GPIO_InitStructure_AS_GPIO_OUTPUT(M8266WIFI_SPI_nCS_GPIO,M8266WIFI_SPI_nCS_PIN);
000010  f8ad0000          STRH     r0,[sp,#0]
000014  f88d0003          STRB     r0,[sp,#3]
000018  2003              MOVS     r0,#3
00001a  f88d0002          STRB     r0,[sp,#2]
00001e  4669              MOV      r1,sp
000020  480c              LDR      r0,|L1.84|
000022  3810              SUBS     r0,r0,#0x10
000024  f7fffffe          BL       GPIO_Init
;;;40     	
;;;41     	//Initial STM32's GPIO for M8266WIFI_nRESET
;;;42       M8266WIFI_nRESET_GPIO_RCC_CLOCK_EN;  															// enable nRESET GPIO clock
000028  2101              MOVS     r1,#1
00002a  2004              MOVS     r0,#4
00002c  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;43     	GPIO_OUTPUT_HIGH(M8266WIFI_nRESET_GPIO,M8266WIFI_nRESET_PIN);		  // nRESET output high initially	
000030  f44f6000          MOV      r0,#0x800
000034  4907              LDR      r1,|L1.84|
000036  6008              STR      r0,[r1,#0]
;;;44     	GPIO_InitStructure_AS_GPIO_OUTPUT(M8266WIFI_nRESET_GPIO,M8266WIFI_nRESET_PIN);
000038  f8ad0000          STRH     r0,[sp,#0]
00003c  2010              MOVS     r0,#0x10
00003e  f88d0003          STRB     r0,[sp,#3]
000042  2003              MOVS     r0,#3
000044  f88d0002          STRB     r0,[sp,#2]
000048  4669              MOV      r1,sp
00004a  4802              LDR      r0,|L1.84|
00004c  3810              SUBS     r0,r0,#0x10
00004e  f7fffffe          BL       GPIO_Init
;;;45     }
000052  bd08              POP      {r3,pc}
;;;46     /***********************************************************************************
                          ENDP

                  |L1.84|
                          DCD      0x40010810

                          AREA ||i.M8266HostIf_SPI_Init||, CODE, READONLY, ALIGN=2

                  M8266HostIf_SPI_Init PROC
;;;59     #endif
;;;60     void M8266HostIf_SPI_Init(void)
000000  b500              PUSH     {lr}
;;;61     {
000002  b087              SUB      sp,sp,#0x1c
;;;62     ////////////////////////////////////////////////////////////////////////////////////
;;;63     ///////////////  STM32F1  //////////////////////////////////////////////////////////
;;;64     #if 	defined(MCU_IS_STM32F1XX)
;;;65       GPIO_InitTypeDef  GPIO_InitStructure;
;;;66       SPI_InitTypeDef   SPI_InitStructure;
;;;67     #if (M8266WIFI_SPI_INTERFACE_NO == 1)  
;;;68     	#if 1 // if use GPIOA5/6/7 for SPI1 SCK/MISO/MOSI
;;;69     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE); 						// enable the SPI1 GPIO CLOCK
000004  2101              MOVS     r1,#1
000006  2004              MOVS     r0,#4
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;70     	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_5|GPIO_Pin_6|GPIO_Pin_7;
00000c  20e0              MOVS     r0,#0xe0
00000e  f8ad0018          STRH     r0,[sp,#0x18]
;;;71       GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF_PP;									// SET GPIOs for SPI1
000012  2018              MOVS     r0,#0x18
000014  f88d001b          STRB     r0,[sp,#0x1b]
;;;72       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000018  2003              MOVS     r0,#3
00001a  f88d001a          STRB     r0,[sp,#0x1a]
;;;73     	GPIO_Init(GPIOA, &GPIO_InitStructure);
00001e  a906              ADD      r1,sp,#0x18
000020  481a              LDR      r0,|L2.140|
000022  f7fffffe          BL       GPIO_Init
;;;74     	//GPIO_PinRemapConfig(GPIO_Remap_SPI1, ENABLE);										// no need to Enable GPIO Alternate for SPI1, since GPIOA5/6/7 for SPI1 is the default alternative
;;;75     	#elif 0 // if use GPIOB3/4/5 for SPI1 SCK/MISO/MOSI
;;;76     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE); 						// enable the SPI1 GPIO CLOCK
;;;77     	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_3|GPIO_Pin_4|GPIO_Pin_5;
;;;78       GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF_PP;									// SET GPIOs for SPI1
;;;79       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
;;;80     	GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;81     	GPIO_PinRemapConfig(GPIO_Remap_SPI1, ENABLE);											// need to Enable GPIO Alternate for SPI1, since GPIOB3/4/5 for SPI1 is not the default alternative
;;;82     	#else
;;;83     	#error You should specify the GPIO pins used on STM32F1 SPI1 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;84     	#endif
;;;85     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1, ENABLE);						  //  Enable SPI1 CLOCK
000026  2101              MOVS     r1,#1
000028  0308              LSLS     r0,r1,#12
00002a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;86     	RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, ENABLE);							//  Start to Reset SPI1
00002e  2101              MOVS     r1,#1
000030  0308              LSLS     r0,r1,#12
000032  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;87     	RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, DISABLE);							//  Stop reseting SPI1	
000036  2100              MOVS     r1,#0
000038  f44f5080          MOV      r0,#0x1000
00003c  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;88     	
;;;89     	// end of if (M8266WIFI_SPI_INTERFACE_NO == 1) for STM32F1
;;;90     
;;;91     #elif (M8266WIFI_SPI_INTERFACE_NO == 2)  
;;;92     	#if 1 // if use GPIOB13/14/15 for SPI2 SCK/MISO/MOSI
;;;93     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE); 						// enable the SPI2 GPIO CLOCK
;;;94     	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_13|GPIO_Pin_14|GPIO_Pin_15;
;;;95       GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF_PP;									// SET GPIOs for SPI2
;;;96       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
;;;97     	GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;98     	//GPIO_PinRemapConfig(GPIO_Remap_SPI2, ENABLE);										//  no need to Enable GPIO Alternate for SPI2, since GPIOB13/14/15 for SPI2 is the default alternative
;;;99     	#else  // STM32F10x has only GPIOB13/14/15 mapped for SPI2
;;;100    	#error You should specify the GPIO pins used on STM32F1 SPI2 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;101    	#endif
;;;102    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI2, ENABLE);						  //  Enable SPI2 CLOCK
;;;103    	RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, ENABLE);							//  Start to Reset SPI2
;;;104    	RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, DISABLE);							//  Stop reseting SPI2
;;;105    
;;;106    	// end of if (M8266WIFI_SPI_INTERFACE_NO == 2) for STM32F1
;;;107    	
;;;108    #elif (M8266WIFI_SPI_INTERFACE_NO == 3)  
;;;109    	#if 1 // if use GPIOB3/4/5 for SPI3 SCK/MISO/MOSI
;;;110    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE); 						// enable the SPI3 GPIO CLOCK
;;;111    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_3|GPIO_Pin_4|GPIO_Pin_5;
;;;112      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF_PP;									// SET GPIOs for SPI2
;;;113      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
;;;114    	GPIO_Init(GPIOB, &GPIO_InitStructure);														
;;;115    	//GPIO_PinRemapConfig(GPIO_Remap_SPI3, ENABLE);										//  no need to Enable GPIO Alternate for SPI3, since GPIOB3/4/5 for SPI3 is the default alternative
;;;116    
;;;117    	#elif 0 // if use GPIOC10/11/12 for SPI3 SCK/MISO/MOSI
;;;118    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE); 						// enable the SPI2 GPIO CLOCK
;;;119    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_13|GPIO_Pin_14|GPIO_Pin_15;
;;;120      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF_PP;									// SET GPIOs for SPI2
;;;121      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
;;;122    	GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;123    	GPIO_PinRemapConfig(GPIO_Remap_SPI3, ENABLE);										  //  need to Enable GPIO Alternate for SPI3, since GPIOC10/11/12 for SPI3 is not the default alternative
;;;124    	#else  // STM32F10x has only GPIOB13/14/15 mapped for SPI2
;;;125    	#error You should specify the GPIO pins used on STM32F1 SPI3 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;126    	#endif
;;;127    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI3, ENABLE);						  //  Enable SPI2 CLOCK
;;;128    	RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE);							//  Start to Reset SPI2
;;;129    	RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, DISABLE);							//  Stop reseting SPI2
;;;130    
;;;131    	// end of if (M8266WIFI_SPI_INTERFACE_NO == 3) for STM32F1
;;;132    		
;;;133    #else
;;;134    #error Invalid M8266WIFI_SPI_INTERFACE_NO defined in brd_cfg.h 
;;;135    #endif
;;;136    
;;;137    	SPI_InitStructure.SPI_Direction 		= SPI_Direction_2Lines_FullDuplex;    
000040  2000              MOVS     r0,#0
000042  f8ad0004          STRH     r0,[sp,#4]
;;;138    	SPI_InitStructure.SPI_Mode 					= SPI_Mode_Master;									  
000046  f44f7082          MOV      r0,#0x104
00004a  f8ad0006          STRH     r0,[sp,#6]
;;;139    	SPI_InitStructure.SPI_DataSize 			= SPI_DataSize_8b;									 
00004e  2000              MOVS     r0,#0
000050  f8ad0008          STRH     r0,[sp,#8]
;;;140    	SPI_InitStructure.SPI_CPOL 					= SPI_CPOL_Low;		                   //  !!!! M8266WIFI SPI Works at CPOL=LOW, CPHA=1Edge
000054  f8ad000a          STRH     r0,[sp,#0xa]
;;;141    	SPI_InitStructure.SPI_CPHA 					= SPI_CPHA_1Edge;	
000058  f8ad000c          STRH     r0,[sp,#0xc]
;;;142    	SPI_InitStructure.SPI_NSS 					= SPI_NSS_Soft;									
00005c  f44f7000          MOV      r0,#0x200
000060  f8ad000e          STRH     r0,[sp,#0xe]
;;;143    	SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_16;
000064  2018              MOVS     r0,#0x18
000066  f8ad0010          STRH     r0,[sp,#0x10]
;;;144    	SPI_InitStructure.SPI_FirstBit 			= SPI_FirstBit_MSB;									 //  !!!! M8266WIFI SPI Works with MSB First							
00006a  2000              MOVS     r0,#0
00006c  f8ad0012          STRH     r0,[sp,#0x12]
;;;145    	SPI_InitStructure.SPI_CRCPolynomial = 7;
000070  2007              MOVS     r0,#7
000072  f8ad0014          STRH     r0,[sp,#0x14]
;;;146    	SPI_Init(M8266WIFI_INTERFACE_SPI, &SPI_InitStructure);
000076  a901              ADD      r1,sp,#4
000078  4805              LDR      r0,|L2.144|
00007a  f7fffffe          BL       SPI_Init
;;;147    	SPI_Cmd(M8266WIFI_INTERFACE_SPI, ENABLE); 															//	Enable SPI Interface
00007e  2101              MOVS     r1,#1
000080  4803              LDR      r0,|L2.144|
000082  f7fffffe          BL       SPI_Cmd
;;;148    	//M8266HostIf_SPI_ReadWriteByte(0xff);																	//  Start Trasmission	
;;;149    #ifdef M8266WIFI_SPI_ACCESS_USE_DMA	
;;;150    	SPI_I2S_DMACmd(M8266WIFI_INTERFACE_SPI, SPI_I2S_DMAReq_Rx, ENABLE);			//  Enable SPI Rx DMA
;;;151    	SPI_I2S_DMACmd(M8266WIFI_INTERFACE_SPI, SPI_I2S_DMAReq_Tx, ENABLE);			//  Enable SPI Tx DMA
;;;152    #endif
;;;153    		
;;;154    ////////////////////////////////////////////////////////////////////////////////////
;;;155    ///////////////  STM32F2 or STM32F4  ///////////////////////////////////////////////
;;;156    #elif defined(MCU_IS_STM32F2XX) || defined(MCU_IS_STM32F4XX)
;;;157      GPIO_InitTypeDef  GPIO_InitStructure;
;;;158      SPI_InitTypeDef   SPI_InitStructure;
;;;159    #if (M8266WIFI_SPI_INTERFACE_NO == 1)
;;;160      #if 1 // if use GPIOA5/6/7 for SPI1 SCK/MISO/MOSI
;;;161    	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE); 						// enable the SPI1 GPIOA CLOCK
;;;162    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_5|GPIO_Pin_6|GPIO_Pin_7;
;;;163      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;											// SET GPIOs for SPI1
;;;164      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;165      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
;;;166      GPIO_InitStructure.GPIO_PuPd 	= GPIO_PuPd_UP;
;;;167    	GPIO_Init(GPIOA, &GPIO_InitStructure);
;;;168    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource7,GPIO_AF_SPI1);							// Enable GPIOA 7/6/5 Alternative for SPI1
;;;169    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource6,GPIO_AF_SPI1);
;;;170    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource5,GPIO_AF_SPI1);
;;;171    	
;;;172      #elif 0 // if use GPIOA5/B4/A7 for SPI1 SCK/MISO/MOSI
;;;173    	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE); 						// enable the SPI1 GPIOA CLOCK
;;;174    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_5|GPIO_Pin_7;
;;;175      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;											// SET GPIOs for SPI1
;;;176      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;177      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
;;;178      GPIO_InitStructure.GPIO_PuPd 	= GPIO_PuPd_UP;
;;;179    	GPIO_Init(GPIOA, &GPIO_InitStructure);
;;;180    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource7,GPIO_AF_SPI1);							// Enable GPIOA 7/6/5 Alternative for SPI1
;;;181    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource5,GPIO_AF_SPI1);
;;;182    	
;;;183    	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE); 						// enable the SPI1 GPIOA CLOCK
;;;184    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_4;
;;;185      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;											// SET GPIOs for SPI1
;;;186      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;187      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
;;;188      GPIO_InitStructure.GPIO_PuPd 	= GPIO_PuPd_UP;
;;;189    	GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;190    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource4,GPIO_AF_SPI1);							
;;;191    
;;;192      #elif	0 // if use GPIOB3/4/5 for SPI1 SCK/MISO/MOSI
;;;193    	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE); 						// enable the SPI1 GPIOB CLOCK
;;;194    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_3|GPIO_Pin_4|GPIO_Pin_5;
;;;195      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;											// SET GPIOs for SPI1
;;;196      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;197      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
;;;198      GPIO_InitStructure.GPIO_PuPd 	= GPIO_PuPd_UP;
;;;199    	GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;200    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource5,GPIO_AF_SPI1);							// Enable GPIOB 5/4/3 Alternative for SPI1
;;;201    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource4,GPIO_AF_SPI1);
;;;202    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource3,GPIO_AF_SPI1);
;;;203    
;;;204      #elif 0 // if use PB3/PA6/PA7 for SPI1 SCK/MISO/MOSI
;;;205    	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE); 						// enable the SPI1 GPIOA CLOCK
;;;206    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_6|GPIO_Pin_7;
;;;207      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;											// SET GPIOs for SPI1
;;;208      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;209      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
;;;210      GPIO_InitStructure.GPIO_PuPd 	= GPIO_PuPd_UP;
;;;211    	GPIO_Init(GPIOA, &GPIO_InitStructure);
;;;212    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource7,GPIO_AF_SPI1);							// Enable GPIOA 7/6 Alternative for SPI1
;;;213    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource6,GPIO_AF_SPI1);
;;;214    	
;;;215    	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE); 						// enable the SPI1 GPIOB CLOCK
;;;216    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_3;
;;;217      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;											// SET GPIOs for SPI1
;;;218      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;219      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
;;;220      GPIO_InitStructure.GPIO_PuPd 	= GPIO_PuPd_UP;
;;;221    	GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;222    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource3,GPIO_AF_SPI1);
;;;223    	#else
;;;224    	#error You should specify the GPIO pins used on STM32F4 SPI1 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;225    	#endif
;;;226    
;;;227      RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1, ENABLE);						  //  Enable SPI1 CLOCK
;;;228    	RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, ENABLE);							//  Start to Reset SPI1
;;;229    	RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, DISABLE);							//  Stop reseting SPI1	
;;;230    
;;;231    // end of if (M8266WIFI_SPI_INTERFACE_NO == 1) for STM32F4
;;;232    	
;;;233    #elif (M8266WIFI_SPI_INTERFACE_NO == 2)    // if use SPI2 GPIOB13/14/15 for SCK/MISO/MOSI
;;;234      #if 1 // if use GPIOB13/14/15 for SPI2 SCK/MISO/MOSI
;;;235    	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE); 						// enable the SPI2 GPIO CLOCK
;;;236    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_13|GPIO_Pin_14|GPIO_Pin_15;
;;;237      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;											// SET GPIOs for SPI2
;;;238      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;239      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
;;;240      GPIO_InitStructure.GPIO_PuPd 	= GPIO_PuPd_UP;
;;;241    	GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;242    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource13,GPIO_AF_SPI2);							// Enable GPIO Alternate for SPI2
;;;243    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource14,GPIO_AF_SPI2);
;;;244    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource15,GPIO_AF_SPI2);
;;;245      #elif 0 // if use GPIOB10/PC2/PC3 for SPI2 SCK/MISO/MOSI
;;;246    	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE); 						// enable the SPI2 GPIO CLOCK
;;;247    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_10;
;;;248      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;											// SET GPIOs for SPI2
;;;249      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;250      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
;;;251      GPIO_InitStructure.GPIO_PuPd 	= GPIO_PuPd_UP;
;;;252    	GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;253    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource10,GPIO_AF_SPI2);						// Enable GPIO Alternate for SPI2
;;;254    		
;;;255    	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE); 						// enable the SPI2 GPIO CLOCK
;;;256    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_2 | GPIO_Pin_3;
;;;257      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;											// SET GPIOs for SPI2
;;;258      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;259      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
;;;260      GPIO_InitStructure.GPIO_PuPd 	= GPIO_PuPd_UP;
;;;261    	GPIO_Init(GPIOC, &GPIO_InitStructure);
;;;262    	GPIO_PinAFConfig(GPIOC,GPIO_PinSource2,GPIO_AF_SPI2);						  // Enable GPIO Alternate for SPI2
;;;263    	GPIO_PinAFConfig(GPIOC,GPIO_PinSource3,GPIO_AF_SPI2);
;;;264      #else
;;;265      #error You should specify the GPIO pins used on STM32F4 SPI2 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;266      #endif	
;;;267    
;;;268      RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI2, ENABLE);						  //  Enable SPI2 CLOCK
;;;269    	RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, ENABLE);							//  Start to Reset SPI2
;;;270    	RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, DISABLE);							//  Stop reseting SPI2
;;;271    	
;;;272    // end of if (M8266WIFI_SPI_INTERFACE_NO == 2) for STM32F4	
;;;273    		
;;;274    #elif (M8266WIFI_SPI_INTERFACE_NO == 3)
;;;275      #if 0  // if use GPIOB3/4/5 for SPI3 SCK/MISO/MOSI
;;;276    	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE); 						// enable the SPI3 GPIO CLOCK, using PB5/PB4/PB3 for MOSI/MISO/SCK
;;;277    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_5|GPIO_Pin_4|GPIO_Pin_3;
;;;278      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;											// SET GPIOs for SPI3
;;;279      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;280      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
;;;281      GPIO_InitStructure.GPIO_PuPd 	= GPIO_PuPd_UP;
;;;282    	GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;283    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource5,GPIO_AF_SPI3);							// Enable GPIO Alternate for SPI3
;;;284    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource4,GPIO_AF_SPI3);
;;;285    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource3,GPIO_AF_SPI3);
;;;286      #elif 1 // if use GPIOC10/11/12 for SPI3 SCK/MISO/MOSI
;;;287      RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE); 						// enable the SPI3 GPIO CLOCK
;;;288    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_10|GPIO_Pin_11|GPIO_Pin_12;
;;;289      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;											// SET GPIOs for SPI3
;;;290      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;291      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
;;;292      GPIO_InitStructure.GPIO_PuPd 	= GPIO_PuPd_UP;
;;;293    	GPIO_Init(GPIOC, &GPIO_InitStructure);
;;;294    	GPIO_PinAFConfig(GPIOC,GPIO_PinSource10,GPIO_AF_SPI3);							// Enable GPIO Alternate for SPI3
;;;295    	GPIO_PinAFConfig(GPIOC,GPIO_PinSource11,GPIO_AF_SPI3);
;;;296    	GPIO_PinAFConfig(GPIOC,GPIO_PinSource12,GPIO_AF_SPI3);
;;;297    	#else
;;;298    	#error You should specify the GPIO pins used on STM32F4 SPI3 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;299    	#endif
;;;300    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI3, ENABLE);						  //  Enable SPI3 CLOCK
;;;301    	RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE);							//  Start to Reset SPI3
;;;302    	RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, DISABLE);							//  Stop reseting SPI3	
;;;303    
;;;304    // end of if (M8266WIFI_SPI_INTERFACE_NO == 3) for STM32F4	
;;;305    
;;;306    #else
;;;307    #error Invalid M8266WIFI_SPI_INTERFACE_NO defined in brd_cfg.h 
;;;308    #endif
;;;309    
;;;310    	SPI_InitStructure.SPI_Direction 		= SPI_Direction_2Lines_FullDuplex;    
;;;311    	SPI_InitStructure.SPI_Mode 					= SPI_Mode_Master;									  
;;;312    	SPI_InitStructure.SPI_DataSize 			= SPI_DataSize_8b;									 
;;;313    	SPI_InitStructure.SPI_CPOL 					= SPI_CPOL_Low;		                   //  !!!! M8266WIFI SPI Works at CPOL=LOW, CPHA=1Edge
;;;314    	SPI_InitStructure.SPI_CPHA 					= SPI_CPHA_1Edge;	
;;;315    	SPI_InitStructure.SPI_NSS 					= SPI_NSS_Soft;									
;;;316    	SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_16;
;;;317    	SPI_InitStructure.SPI_FirstBit 			= SPI_FirstBit_MSB;									 //  !!!! M8266WIFI SPI Works with MSB First							
;;;318    	SPI_InitStructure.SPI_CRCPolynomial = 7;
;;;319    	SPI_Init(M8266WIFI_INTERFACE_SPI, &SPI_InitStructure);
;;;320    	SPI_Cmd(M8266WIFI_INTERFACE_SPI, ENABLE); 															//	Enable SPI Interface
;;;321    	//M8266HostIf_SPI_ReadWriteByte(0xff);																	//  Start Trasmission	
;;;322    #ifdef M8266WIFI_SPI_ACCESS_USE_DMA	
;;;323    	SPI_I2S_DMACmd(M8266WIFI_INTERFACE_SPI, SPI_I2S_DMAReq_Rx, ENABLE);			//  Enable SPI Rx DMA
;;;324    	SPI_I2S_DMACmd(M8266WIFI_INTERFACE_SPI, SPI_I2S_DMAReq_Tx, ENABLE);			//  Enable SPI Tx DMA
;;;325    #endif
;;;326    
;;;327    ////////////////////////////////////////////////////////////////////////////////////
;;;328    //////////////////////////  STM32F3  ///////////////////////////////////////////////
;;;329    #elif defined(MCU_IS_STM32F3XX)
;;;330      GPIO_InitTypeDef  GPIO_InitStructure;
;;;331      SPI_InitTypeDef   SPI_InitStructure;
;;;332    #if (M8266WIFI_SPI_INTERFACE_NO == 1)  
;;;333    	#if 0 // if use SPI1 GPIOA5/6/7 for SCK/MISO/MOSI
;;;334    	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE); 						// enable the SPI1 GPIO CLOCK
;;;335    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_5|GPIO_Pin_6|GPIO_Pin_7;
;;;336      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;											// SET GPIOs for SPI1
;;;337      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;338      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_Level_3;
;;;339      GPIO_InitStructure.GPIO_PuPd 	= GPIO_PuPd_UP;
;;;340    	GPIO_Init(GPIOA, &GPIO_InitStructure);
;;;341    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource7,GPIO_AF_5);							// Enable GPIO Alternate for SPI1
;;;342    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource6,GPIO_AF_5);
;;;343    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource5,GPIO_AF_5);
;;;344    
;;;345      #elif	1 // if use GPIOB3/4/5 for SPI1 SCK/MISO/MOSI
;;;346    	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE); 						// enable the SPI1 GPIOB CLOCK
;;;347    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_3|GPIO_Pin_4|GPIO_Pin_5;
;;;348      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;											// SET GPIOs for SPI1
;;;349      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;350      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_Level_3;
;;;351      GPIO_InitStructure.GPIO_PuPd 	= GPIO_PuPd_UP;
;;;352    	GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;353    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource5,GPIO_AF_5);							// Enable GPIOB 5/4/3 Alternative for SPI1
;;;354    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource4,GPIO_AF_5);
;;;355    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource3,GPIO_AF_5);
;;;356    	#else
;;;357    	#error You should specify the GPIO pins used on STM32F3 SPI1 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;358    	#endif
;;;359    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1, ENABLE);						  //  Enable SPI1 CLOCK
;;;360    	RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, ENABLE);							//  Start to Reset SPI1
;;;361    	RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, DISABLE);							//  Stop reseting SPI1	
;;;362    
;;;363    // end of if (M8266WIFI_SPI_INTERFACE_NO == 1) for STM32F3	
;;;364    
;;;365    #elif (M8266WIFI_SPI_INTERFACE_NO == 2)    
;;;366      #if 1 // if use SPI2 GPIOB13/14/15 for SCK/MISO/MOSI
;;;367    	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE); 						// enable the SPI2 GPIO CLOCK
;;;368    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_13|GPIO_Pin_14|GPIO_Pin_15;
;;;369      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;											// SET GPIOs for SPI2
;;;370      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;371      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_Level_3;
;;;372      GPIO_InitStructure.GPIO_PuPd 	= GPIO_PuPd_UP;
;;;373    	GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;374    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource13,GPIO_AF_5);							// Enable GPIO Alternate for SPI2
;;;375    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource14,GPIO_AF_5);
;;;376    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource15,GPIO_AF_5);
;;;377    	#elif 0
;;;378    	#else
;;;379    	#error You should specify the GPIO pins used on STM32F3 SPI1 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;380    	#endif
;;;381    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI2, ENABLE);						  //  Enable SPI2 CLOCK
;;;382    	RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, ENABLE);							//  Start to Reset SPI2
;;;383    	RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, DISABLE);							//  Stop reseting SPI2
;;;384    
;;;385    // end of if (M8266WIFI_SPI_INTERFACE_NO == 2) for STM32F3	
;;;386    
;;;387    #elif (M8266WIFI_SPI_INTERFACE_NO == 3)    
;;;388      #if 1  // if use GPIOB3/4/5 for SPI3 SCK/MISO/MOSI
;;;389    	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE); 						// enable the SPI3 GPIO CLOCK, using PB5/PB4/PB3 for MOSI/MISO/SCK
;;;390    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_5|GPIO_Pin_4|GPIO_Pin_3;
;;;391      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;											// SET GPIOs for SPI3
;;;392      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;393      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_Level_3;
;;;394      GPIO_InitStructure.GPIO_PuPd 	= GPIO_PuPd_UP;
;;;395    	GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;396    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource5,GPIO_AF_6);							// Enable GPIO Alternate for SPI3
;;;397    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource4,GPIO_AF_6);
;;;398    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource3,GPIO_AF_6);
;;;399    	
;;;400      #elif 0 // if use GPIOC10/11/12 for SPI3 SCK/MISO/MOSI
;;;401    	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE); 						  // enable the SPI3 GPIO CLOCK
;;;402    	GPIO_InitStructure.GPIO_Pin		= GPIO_Pin_10|GPIO_Pin_11|GPIO_Pin_12;
;;;403      GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;											// SET GPIOs for SPI3
;;;404      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;405      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_Level_3;
;;;406      GPIO_InitStructure.GPIO_PuPd 	= GPIO_PuPd_UP;
;;;407    	GPIO_Init(GPIOC, &GPIO_InitStructure);
;;;408    	GPIO_PinAFConfig(GPIOC,GPIO_PinSource10,GPIO_AF_6);							// Enable GPIO Alternate for SPI3
;;;409    	GPIO_PinAFConfig(GPIOC,GPIO_PinSource11,GPIO_AF_6);
;;;410    	GPIO_PinAFConfig(GPIOC,GPIO_PinSource12,GPIO_AF_6);
;;;411    	#else
;;;412    	#error You should specify the GPIO pins used on STM32F3 SPI1 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;413    	#endif	
;;;414    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI3, ENABLE);						  //  Enable SPI3 CLOCK
;;;415    	RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE);							//  Start to Reset SPI3
;;;416    	RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, DISABLE);							//  Stop reseting SPI3	
;;;417    	
;;;418    	// end of if (M8266WIFI_SPI_INTERFACE_NO == 3) for STM32F3	
;;;419    	
;;;420    #else
;;;421    #error Invalid M8266WIFI_SPI_INTERFACE_NO defined in brd_cfg.h 
;;;422    #endif
;;;423    
;;;424    	SPI_InitStructure.SPI_Direction 		= SPI_Direction_2Lines_FullDuplex;    
;;;425    	SPI_InitStructure.SPI_Mode 					= SPI_Mode_Master;									  
;;;426    	SPI_InitStructure.SPI_DataSize 			= SPI_DataSize_8b;									 
;;;427    	SPI_InitStructure.SPI_CPOL 					= SPI_CPOL_Low;		                   //  !!!! M8266WIFI SPI Works at CPOL=LOW, CPHA=1Edge
;;;428    	SPI_InitStructure.SPI_CPHA 					= SPI_CPHA_1Edge;	
;;;429    	SPI_InitStructure.SPI_NSS 					= SPI_NSS_Soft;									
;;;430    	SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_16;
;;;431    	SPI_InitStructure.SPI_FirstBit 			= SPI_FirstBit_MSB;									 //  !!!! M8266WIFI SPI Works with MSB First							
;;;432    	SPI_InitStructure.SPI_CRCPolynomial = 7;
;;;433    	SPI_Init(M8266WIFI_INTERFACE_SPI, &SPI_InitStructure);
;;;434    	SPI_Cmd(M8266WIFI_INTERFACE_SPI, ENABLE); 															//	Enable SPI Interface
;;;435    	//M8266HostIf_SPI_ReadWriteByte(0xff);																	//  Start Trasmission	
;;;436    #ifdef M8266WIFI_SPI_ACCESS_USE_DMA	
;;;437    	SPI_I2S_DMACmd(M8266WIFI_INTERFACE_SPI, SPI_I2S_DMAReq_Rx, ENABLE);			//  Enable SPI Rx DMA
;;;438    	SPI_I2S_DMACmd(M8266WIFI_INTERFACE_SPI, SPI_I2S_DMAReq_Tx, ENABLE);			//  Enable SPI Tx DMA
;;;439    #endif
;;;440    
;;;441    ////////////////////////////////////////////////////////////////////////////////////
;;;442    ///////////////  STM32F7  //////////////////////////////////////////////////////////
;;;443    #elif defined(MCU_IS_STM32F7XX)
;;;444      GPIO_InitTypeDef  GPIO_InitStructure;
;;;445    #if (M8266WIFI_SPI_INTERFACE_NO == 1)
;;;446    	#if 1 // if use GPIOA5/6/7 for SPI1 SCK/MISO/MOSI
;;;447    	__HAL_RCC_GPIOA_CLK_ENABLE();					// Enable the GPIOE Clock
;;;448    	GPIO_InitStructure.Pin       = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;
;;;449    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;450    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;451    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;452      GPIO_InitStructure.Alternate = GPIO_AF5_SPI1;	
;;;453    	HAL_GPIO_Init(GPIOA, &GPIO_InitStructure);  
;;;454    	#elif 0 // if use GPIOB3/4/5 for SPI1 SCK/MISO/MOSI
;;;455    	__HAL_RCC_GPIOB_CLK_ENABLE();					// Enable the GPIOB Clock
;;;456    	GPIO_InitStructure.Pin       = GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5;
;;;457    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;458    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;459    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;460      GPIO_InitStructure.Alternate = GPIO_AF5_SPI1;	
;;;461    	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);  
;;;462    	#else
;;;463    	#error You should specify the GPIO pins used on STM32F7 SPI1 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;464    	#endif
;;;465    	__HAL_RCC_SPI1_CLK_ENABLE();
;;;466    	hspi.Instance = SPI1;	
;;;467    // end of if (M8266WIFI_SPI_INTERFACE_NO == 1) for STM32F7
;;;468    
;;;469    #elif (M8266WIFI_SPI_INTERFACE_NO == 2)
;;;470    	#if 1 // if use GPIOB13/14/15 for SPI2 SCK/MISO/MOSI
;;;471    	__HAL_RCC_GPIOB_CLK_ENABLE();					// Enable the GPIOB Clock
;;;472    	GPIO_InitStructure.Pin       = GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
;;;473    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;474    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;475    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;476      GPIO_InitStructure.Alternate = GPIO_AF5_SPI2;	
;;;477    	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);  
;;;478      #elif 0 // if use GPIOB10/PC2/PC3 for SPI2 SCK/MISO/MOSI
;;;479    	__HAL_RCC_GPIOB_CLK_ENABLE();					// Enable the GPIOB Clock
;;;480    	GPIO_InitStructure.Pin       = GPIO_PIN_10;
;;;481    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;482    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;483    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;484      GPIO_InitStructure.Alternate = GPIO_AF5_SPI2;	
;;;485    	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);  
;;;486    	__HAL_RCC_GPIOC_CLK_ENABLE();					// Enable the GPIOC Clock
;;;487    	GPIO_InitStructure.Pin       = GPIO_PIN_2 | GPIO_PIN_3;
;;;488    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;489    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;490    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;491      GPIO_InitStructure.Alternate = GPIO_AF5_SPI2;	
;;;492    	HAL_GPIO_Init(GPIOC, &GPIO_InitStructure);  
;;;493    	#else
;;;494    	#error You should specify the GPIO pins used on STM32F7 SPI2 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;495    	#endif
;;;496    	__HAL_RCC_SPI2_CLK_ENABLE();
;;;497    	hspi.Instance = SPI2;	
;;;498    // end of if (M8266WIFI_SPI_INTERFACE_NO == 2) for STM32F7
;;;499    
;;;500    #elif (M8266WIFI_SPI_INTERFACE_NO == 3)
;;;501    	#if 1 // if use GPIOB3/4/5 for SPI3 SCK/MISO/MOSI
;;;502    	__HAL_RCC_GPIOB_CLK_ENABLE();					// Enable the GPIOB Clock
;;;503    	GPIO_InitStructure.Pin       = GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5;
;;;504    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;505    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;506    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;507      GPIO_InitStructure.Alternate = GPIO_AF6_SPI3;	
;;;508    	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);  
;;;509      #elif 0 // if use GPIOC10/11/12 for SPI3 SCK/MISO/MOSI
;;;510    	__HAL_RCC_GPIOC_CLK_ENABLE();					// Enable the GPIOC Clock
;;;511    	GPIO_InitStructure.Pin       = GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12;
;;;512    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;513    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;514    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;515      GPIO_InitStructure.Alternate = GPIO_AF6_SPI3;	
;;;516    	HAL_GPIO_Init(GPIOC, &GPIO_InitStructure);  
;;;517    	#else
;;;518    	#error You should specify the GPIO pins used on STM32F7 SPI3 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;519    	#endif
;;;520    	__HAL_RCC_SPI3_CLK_ENABLE();
;;;521    	hspi.Instance = SPI3;	
;;;522    // end of if (M8266WIFI_SPI_INTERFACE_NO == 3) for STM32F7
;;;523    
;;;524    #elif (M8266WIFI_SPI_INTERFACE_NO == 4)  
;;;525      #if 1 // if use SPI1 GPIOE2/5/6 for SCK/MISO/MOSI
;;;526    	__HAL_RCC_GPIOE_CLK_ENABLE();					 // Enable the GPIOE Clock
;;;527    	GPIO_InitStructure.Pin       = GPIO_PIN_2 | GPIO_PIN_5 | GPIO_PIN_6;
;;;528    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;529    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;530    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;531      GPIO_InitStructure.Alternate = GPIO_AF5_SPI4;	
;;;532    	HAL_GPIO_Init(GPIOE, &GPIO_InitStructure); 
;;;533      #elif 0 // if use SPI1 GPIOE12/13/14 for SCK/MISO/MOSI
;;;534    	__HAL_RCC_GPIOE_CLK_ENABLE();					 // Enable the GPIOE Clock
;;;535    	GPIO_InitStructure.Pin       = GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14;
;;;536    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;537    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;538    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;539      GPIO_InitStructure.Alternate = GPIO_AF5_SPI4;	
;;;540    	HAL_GPIO_Init(GPIOE, &GPIO_InitStructure); 
;;;541    	#else
;;;542    	#error You should specify the GPIO pins used on STM32F7 SPI4 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;543    	#endif
;;;544    	__HAL_RCC_SPI4_CLK_ENABLE();
;;;545    	hspi.Instance = SPI4;
;;;546    #else
;;;547    #error Invalid M8266WIFI_SPI_INTERFACE_NO defined in brd_cfg.h 
;;;548    #endif
;;;549    
;;;550      hspi.Init.Mode 									= SPI_MODE_MASTER;
;;;551      hspi.Init.Direction 						= SPI_DIRECTION_2LINES;
;;;552      hspi.Init.DataSize 							= SPI_DATASIZE_8BIT;
;;;553      hspi.Init.CLKPolarity 					= SPI_POLARITY_LOW;
;;;554      hspi.Init.CLKPhase 							= SPI_PHASE_1EDGE;
;;;555      hspi.Init.NSS 									= SPI_NSS_SOFT;
;;;556      hspi.Init.BaudRatePrescaler 		= SPI_BAUDRATEPRESCALER_8;
;;;557      hspi.Init.FirstBit 							= SPI_FIRSTBIT_MSB;
;;;558      hspi.Init.TIMode 								= SPI_TIMODE_DISABLE;
;;;559      hspi.Init.CRCCalculation 				= SPI_CRCCALCULATION_DISABLE;
;;;560      hspi.Init.CRCPolynomial 				= 7;
;;;561      hspi.Init.CRCLength 						= SPI_CRC_LENGTH_DATASIZE;
;;;562      hspi.Init.NSSPMode 							= SPI_NSS_PULSE_DISABLE; //SPI_NSS_PULSE_ENABLE;
;;;563      if (HAL_SPI_Init(&hspi) != HAL_OK)
;;;564      {
;;;565        while(1);
;;;566      }
;;;567      __HAL_SPI_ENABLE(&hspi);
;;;568    
;;;569    ////////////////////////////////////////////////////////////////////////////////////
;;;570    ///////////////  STM32L1  //////////////////////////////////////////////////////////
;;;571    #elif defined(MCU_IS_STM32L1XX)
;;;572      GPIO_InitTypeDef  GPIO_InitStructure;
;;;573    #if (M8266WIFI_SPI_INTERFACE_NO == 1)
;;;574    	#if 0 // if use GPIOA5/6/7 for SPI1 SCK/MISO/MOSI
;;;575    	__HAL_RCC_GPIOA_CLK_ENABLE();					// Enable the GPIOE Clock
;;;576    	GPIO_InitStructure.Pin       = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;
;;;577    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;578    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;579    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;580      GPIO_InitStructure.Alternate = GPIO_AF5_SPI1;	
;;;581    	HAL_GPIO_Init(GPIOA, &GPIO_InitStructure);  
;;;582    	#elif 1 // if use GPIOB3/4/5 for SPI1 SCK/MISO/MOSI
;;;583    	__HAL_RCC_GPIOB_CLK_ENABLE();					// Enable the GPIOB Clock
;;;584    	GPIO_InitStructure.Pin       = GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5;
;;;585    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;586    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;587    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;588      GPIO_InitStructure.Alternate = GPIO_AF5_SPI1;	
;;;589    	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);  
;;;590    	#else
;;;591    	#error You should specify the GPIO pins used on STM32F7 SPI1 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;592    	#endif
;;;593    	__HAL_RCC_SPI1_CLK_ENABLE();
;;;594    	hspi.Instance = SPI1;	
;;;595    // end of if (M8266WIFI_SPI_INTERFACE_NO == 1) for STM32F7
;;;596    
;;;597    #elif (M8266WIFI_SPI_INTERFACE_NO == 2)
;;;598    	#if 0 // if use GPIOB13/14/15 for SPI2 SCK/MISO/MOSI
;;;599    	__HAL_RCC_GPIOB_CLK_ENABLE();					// Enable the GPIOB Clock
;;;600    	GPIO_InitStructure.Pin       = GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
;;;601    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;602    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;603    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;604      GPIO_InitStructure.Alternate = GPIO_AF5_SPI2;	
;;;605    	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);  
;;;606      #elif 1 // if use GPIO PD1/PD3/PD4 for SPI2 SCK/MISO/MOSI
;;;607    	__HAL_RCC_GPIOD_CLK_ENABLE();					// Enable the GPIOD Clock
;;;608    	GPIO_InitStructure.Pin       = GPIO_PIN_1 | GPIO_PIN_3 | GPIO_PIN_4;
;;;609    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;610    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;611    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;612      GPIO_InitStructure.Alternate = GPIO_AF5_SPI2;	
;;;613    	HAL_GPIO_Init(GPIOD, &GPIO_InitStructure);  
;;;614    	#else
;;;615    	#error You should specify the GPIO pins used on STM32F7 SPI2 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;616    	#endif
;;;617    	__HAL_RCC_SPI2_CLK_ENABLE();
;;;618    	hspi.Instance = SPI2;	
;;;619    // end of if (M8266WIFI_SPI_INTERFACE_NO == 2) for STM32F7
;;;620    
;;;621    #elif (M8266WIFI_SPI_INTERFACE_NO == 3)   // L15x Serials have only SPI1 and SPI2, no SPI3
;;;622    	#if 1 // if use GPIOB3/4/5 for SPI3 SCK/MISO/MOSI
;;;623    	__HAL_RCC_GPIOB_CLK_ENABLE();					// Enable the GPIOB Clock
;;;624    	GPIO_InitStructure.Pin       = GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5;
;;;625    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;626    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;627    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;628      GPIO_InitStructure.Alternate = GPIO_AF6_SPI3;	
;;;629    	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);  
;;;630      #elif 0 // if use GPIOC10/11/12 for SPI3 SCK/MISO/MOSI
;;;631    	__HAL_RCC_GPIOC_CLK_ENABLE();					// Enable the GPIOC Clock
;;;632    	GPIO_InitStructure.Pin       = GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12;
;;;633    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;634    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;635    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;636      GPIO_InitStructure.Alternate = GPIO_AF6_SPI3;	
;;;637    	HAL_GPIO_Init(GPIOC, &GPIO_InitStructure);  
;;;638    	#else
;;;639    	#error You should specify the GPIO pins used on STM32F7 SPI3 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;640    	#endif
;;;641    	__HAL_RCC_SPI3_CLK_ENABLE();
;;;642    	hspi.Instance = SPI3;	
;;;643    // end of if (M8266WIFI_SPI_INTERFACE_NO == 3) for STM32F7
;;;644    #else
;;;645    #error Invalid M8266WIFI_SPI_INTERFACE_NO defined in brd_cfg.h 
;;;646    #endif
;;;647    
;;;648      hspi.Init.Mode 									= SPI_MODE_MASTER;
;;;649      hspi.Init.Direction 						= SPI_DIRECTION_2LINES;
;;;650      hspi.Init.DataSize 							= SPI_DATASIZE_8BIT;
;;;651      hspi.Init.CLKPolarity 					= SPI_POLARITY_LOW;
;;;652      hspi.Init.CLKPhase 							= SPI_PHASE_1EDGE;
;;;653      hspi.Init.NSS 									= SPI_NSS_SOFT;
;;;654      hspi.Init.BaudRatePrescaler 		= SPI_BAUDRATEPRESCALER_8;
;;;655      hspi.Init.FirstBit 							= SPI_FIRSTBIT_MSB;
;;;656      hspi.Init.TIMode 								= SPI_TIMODE_DISABLE;
;;;657      hspi.Init.CRCCalculation 				= SPI_CRCCALCULATION_DISABLE;
;;;658      hspi.Init.CRCPolynomial 				= 7;
;;;659      if (HAL_SPI_Init(&hspi) != HAL_OK)
;;;660      {
;;;661        while(1);
;;;662      }
;;;663      __HAL_SPI_ENABLE(&hspi); 
;;;664    
;;;665    ////////////////////////////////////////////////////////////////////////////////////
;;;666    ///////////////  STM32L4  //////////////////////////////////////////////////////////
;;;667    #elif defined(MCU_IS_STM32L4XX)
;;;668      GPIO_InitTypeDef  GPIO_InitStructure;
;;;669    #if (M8266WIFI_SPI_INTERFACE_NO == 1)
;;;670    	#if 0 // if use GPIOA5/6/7 for SPI1 SCK/MISO/MOSI
;;;671    	__HAL_RCC_GPIOA_CLK_ENABLE();					// Enable the GPIOE Clock
;;;672    	GPIO_InitStructure.Pin       = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;
;;;673    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;674    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;675    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;676      GPIO_InitStructure.Alternate = GPIO_AF5_SPI1;	
;;;677    	HAL_GPIO_Init(GPIOA, &GPIO_InitStructure);  
;;;678    	#elif 1 // if use GPIOB3/4/5 for SPI1 SCK/MISO/MOSI
;;;679    	__HAL_RCC_GPIOB_CLK_ENABLE();					// Enable the GPIOB Clock
;;;680    	GPIO_InitStructure.Pin       = GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5;
;;;681    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;682    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;683    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;684      GPIO_InitStructure.Alternate = GPIO_AF5_SPI1;	
;;;685    	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);  
;;;686    	#else
;;;687    	#error You should specify the GPIO pins used on STM32F7 SPI1 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;688    	#endif
;;;689    	__HAL_RCC_SPI1_CLK_ENABLE();
;;;690    	hspi.Instance = SPI1;	
;;;691    // end of if (M8266WIFI_SPI_INTERFACE_NO == 1) for STM32F7
;;;692    
;;;693    #elif (M8266WIFI_SPI_INTERFACE_NO == 2)
;;;694    	#if 1 // if use GPIOB13/14/15 for SPI2 SCK/MISO/MOSI
;;;695    	__HAL_RCC_GPIOB_CLK_ENABLE();					// Enable the GPIOB Clock
;;;696    	GPIO_InitStructure.Pin       = GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
;;;697    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;698    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;699    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;700      GPIO_InitStructure.Alternate = GPIO_AF5_SPI2;	
;;;701    	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);  
;;;702      #elif 0 // if use GPIOB10/PC2/PC3 for SPI2 SCK/MISO/MOSI
;;;703    	__HAL_RCC_GPIOB_CLK_ENABLE();					// Enable the GPIOB Clock
;;;704    	GPIO_InitStructure.Pin       = GPIO_PIN_10;
;;;705    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;706    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;707    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;708      GPIO_InitStructure.Alternate = GPIO_AF5_SPI2;	
;;;709    	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);  
;;;710    	__HAL_RCC_GPIOC_CLK_ENABLE();					// Enable the GPIOC Clock
;;;711    	GPIO_InitStructure.Pin       = GPIO_PIN_2 | GPIO_PIN_3;
;;;712    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;713    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;714    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;715      GPIO_InitStructure.Alternate = GPIO_AF5_SPI2;	
;;;716    	HAL_GPIO_Init(GPIOC, &GPIO_InitStructure);  
;;;717    	#else
;;;718    	#error You should specify the GPIO pins used on STM32F7 SPI2 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;719    	#endif
;;;720    	__HAL_RCC_SPI2_CLK_ENABLE();
;;;721    	hspi.Instance = SPI2;	
;;;722    // end of if (M8266WIFI_SPI_INTERFACE_NO == 2) for STM32F7
;;;723    
;;;724    #elif (M8266WIFI_SPI_INTERFACE_NO == 3)
;;;725    	#if 1 // if use GPIOB3/4/5 for SPI3 SCK/MISO/MOSI
;;;726    	__HAL_RCC_GPIOB_CLK_ENABLE();					// Enable the GPIOB Clock
;;;727    	GPIO_InitStructure.Pin       = GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5;
;;;728    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;729    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;730    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;731      GPIO_InitStructure.Alternate = GPIO_AF6_SPI3;	
;;;732    	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);  
;;;733      #elif 0 // if use GPIOC10/11/12 for SPI3 SCK/MISO/MOSI
;;;734    	__HAL_RCC_GPIOC_CLK_ENABLE();					// Enable the GPIOC Clock
;;;735    	GPIO_InitStructure.Pin       = GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12;
;;;736    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;737    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;738    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;739      GPIO_InitStructure.Alternate = GPIO_AF6_SPI3;	
;;;740    	HAL_GPIO_Init(GPIOC, &GPIO_InitStructure);  
;;;741    	#else
;;;742    	#error You should specify the GPIO pins used on STM32F7 SPI3 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;743    	#endif
;;;744    	__HAL_RCC_SPI3_CLK_ENABLE();
;;;745    	hspi.Instance = SPI3;	
;;;746    // end of if (M8266WIFI_SPI_INTERFACE_NO == 3) for STM32F7
;;;747    
;;;748    #elif (M8266WIFI_SPI_INTERFACE_NO == 4)  
;;;749      #if 1 // if use SPI1 GPIOE2/5/6 for SCK/MISO/MOSI
;;;750    	__HAL_RCC_GPIOE_CLK_ENABLE();					 // Enable the GPIOE Clock
;;;751    	GPIO_InitStructure.Pin       = GPIO_PIN_2 | GPIO_PIN_5 | GPIO_PIN_6;
;;;752    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;753    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;754    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;755      GPIO_InitStructure.Alternate = GPIO_AF5_SPI4;	
;;;756    	HAL_GPIO_Init(GPIOE, &GPIO_InitStructure); 
;;;757      #elif 0 // if use SPI1 GPIOE12/13/14 for SCK/MISO/MOSI
;;;758    	__HAL_RCC_GPIOE_CLK_ENABLE();					 // Enable the GPIOE Clock
;;;759    	GPIO_InitStructure.Pin       = GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14;
;;;760    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;761    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;762    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;763      GPIO_InitStructure.Alternate = GPIO_AF5_SPI4;	
;;;764    	HAL_GPIO_Init(GPIOE, &GPIO_InitStructure); 
;;;765    	#else
;;;766    	#error You should specify the GPIO pins used on STM32F7 SPI4 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;767    	#endif
;;;768    	__HAL_RCC_SPI4_CLK_ENABLE();
;;;769    	hspi.Instance = SPI4;
;;;770    #else
;;;771    #error Invalid M8266WIFI_SPI_INTERFACE_NO defined in brd_cfg.h 
;;;772    #endif
;;;773    
;;;774      hspi.Init.Mode 									= SPI_MODE_MASTER;
;;;775      hspi.Init.Direction 						= SPI_DIRECTION_2LINES;
;;;776      hspi.Init.DataSize 							= SPI_DATASIZE_8BIT;
;;;777      hspi.Init.CLKPolarity 					= SPI_POLARITY_LOW;
;;;778      hspi.Init.CLKPhase 							= SPI_PHASE_1EDGE;
;;;779      hspi.Init.NSS 									= SPI_NSS_SOFT;
;;;780      hspi.Init.BaudRatePrescaler 		= SPI_BAUDRATEPRESCALER_8;
;;;781      hspi.Init.FirstBit 							= SPI_FIRSTBIT_MSB;
;;;782      hspi.Init.TIMode 								= SPI_TIMODE_DISABLE;
;;;783      hspi.Init.CRCCalculation 				= SPI_CRCCALCULATION_DISABLE;
;;;784      hspi.Init.CRCPolynomial 				= 7;
;;;785      hspi.Init.CRCLength 						= SPI_CRC_LENGTH_DATASIZE;
;;;786      hspi.Init.NSSPMode 							= SPI_NSS_PULSE_DISABLE; //SPI_NSS_PULSE_ENABLE;
;;;787      if (HAL_SPI_Init(&hspi) != HAL_OK)
;;;788      {
;;;789        while(1);
;;;790      }
;;;791      __HAL_SPI_ENABLE(&hspi); 
;;;792    	
;;;793    ////////////////////////////////////////////////////////////////////////////////////
;;;794    ///////////////  STM32H7  //////////////////////////////////////////////////////////
;;;795    #elif defined(MCU_IS_STM32H7XX)
;;;796      GPIO_InitTypeDef  GPIO_InitStructure;
;;;797    #if (M8266WIFI_SPI_INTERFACE_NO == 1)
;;;798    	#if 0 // if use GPIOA5/6/7 for SPI1 SCK/MISO/MOSI
;;;799    	__HAL_RCC_GPIOA_CLK_ENABLE();					// Enable the GPIOE Clock
;;;800    	GPIO_InitStructure.Pin       = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;
;;;801    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;802    	GPIO_InitStructure.Speed     = GPIO_SPEED_FREQ_HIGH;
;;;803    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;804      GPIO_InitStructure.Alternate = GPIO_AF5_SPI1;	
;;;805    	HAL_GPIO_Init(GPIOA, &GPIO_InitStructure);  
;;;806    	#elif 1 // if use GPIOB3/4/5 for SPI1 SCK/MISO/MOSI
;;;807    	__HAL_RCC_GPIOB_CLK_ENABLE();					// Enable the GPIOB Clock
;;;808    	GPIO_InitStructure.Pin       = GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5;
;;;809    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;810    	GPIO_InitStructure.Speed     = GPIO_SPEED_FREQ_HIGH;
;;;811    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;812      GPIO_InitStructure.Alternate = GPIO_AF5_SPI1;	
;;;813    	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);  
;;;814    	#else
;;;815    	#error You should specify the GPIO pins used on STM32F7 SPI1 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;816    	#endif
;;;817    	__HAL_RCC_SPI1_CLK_ENABLE();
;;;818    	hspi.Instance = SPI1;	
;;;819    // end of if (M8266WIFI_SPI_INTERFACE_NO == 1) for STM32F7
;;;820    
;;;821    #elif (M8266WIFI_SPI_INTERFACE_NO == 2)
;;;822    	#if 1 // if use GPIOB13/14/15 for SPI2 SCK/MISO/MOSI
;;;823    	__HAL_RCC_GPIOB_CLK_ENABLE();					// Enable the GPIOB Clock
;;;824    	GPIO_InitStructure.Pin       = GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
;;;825    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;826    	GPIO_InitStructure.Speed     = GPIO_SPEED_FREQ_HIGH;
;;;827    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;828      GPIO_InitStructure.Alternate = GPIO_AF5_SPI2;	
;;;829    	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);  
;;;830      #elif 0 // if use GPIOB10/PC2/PC3 for SPI2 SCK/MISO/MOSI
;;;831    	__HAL_RCC_GPIOB_CLK_ENABLE();					// Enable the GPIOB Clock
;;;832    	GPIO_InitStructure.Pin       = GPIO_PIN_10;
;;;833    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;834    	GPIO_InitStructure.Speed     = GPIO_SPEED_FREQ_HIGH;
;;;835    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;836      GPIO_InitStructure.Alternate = GPIO_AF5_SPI2;	
;;;837    	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);  
;;;838    	__HAL_RCC_GPIOC_CLK_ENABLE();					// Enable the GPIOC Clock
;;;839    	GPIO_InitStructure.Pin       = GPIO_PIN_2 | GPIO_PIN_3;
;;;840    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;841    	GPIO_InitStructure.Speed     = GPIO_SPEED_FREQ_HIGH;
;;;842    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;843      GPIO_InitStructure.Alternate = GPIO_AF5_SPI2;	
;;;844    	HAL_GPIO_Init(GPIOC, &GPIO_InitStructure);  
;;;845    	#else
;;;846    	#error You should specify the GPIO pins used on STM32F7 SPI2 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;847    	#endif
;;;848    	__HAL_RCC_SPI2_CLK_ENABLE();
;;;849    	hspi.Instance = SPI2;	
;;;850    // end of if (M8266WIFI_SPI_INTERFACE_NO == 2) for STM32F7
;;;851    
;;;852    #elif (M8266WIFI_SPI_INTERFACE_NO == 3)
;;;853    	#if 0 // if use GPIOB3/4/5 for SPI3 SCK/MISO/MOSI
;;;854    	__HAL_RCC_GPIOB_CLK_ENABLE();					// Enable the GPIOB Clock
;;;855    	GPIO_InitStructure.Pin       = GPIO_PIN_3 | GPIO_PIN_4;
;;;856    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;857    	GPIO_InitStructure.Speed     = GPIO_SPEED_FREQ_HIGH;
;;;858    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;859      GPIO_InitStructure.Alternate = GPIO_AF6_SPI3;	
;;;860    	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);  
;;;861    	
;;;862    	GPIO_InitStructure.Pin       = GPIO_PIN_5;	
;;;863      GPIO_InitStructure.Alternate = GPIO_AF7_SPI3;		//kindly noted that the SPI3_MOSI @ PB5 -> AF7_SPI3 other than AF6_SPI3	
;;;864    	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);  
;;;865    	
;;;866      #elif 1 // if use GPIOC10/11/12 for SPI3 SCK/MISO/MOSI
;;;867    	__HAL_RCC_GPIOC_CLK_ENABLE();					// Enable the GPIOC Clock
;;;868    	GPIO_InitStructure.Pin       = GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12;
;;;869    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;870    	GPIO_InitStructure.Speed     = GPIO_SPEED_FREQ_HIGH;
;;;871    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;872      GPIO_InitStructure.Alternate = GPIO_AF6_SPI3;	
;;;873    	HAL_GPIO_Init(GPIOC, &GPIO_InitStructure);  
;;;874    	#else
;;;875    	#error You should specify the GPIO pins used on STM32F7 SPI3 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;876    	#endif
;;;877    	__HAL_RCC_SPI3_CLK_ENABLE();
;;;878    	hspi.Instance = SPI3;	
;;;879    // end of if (M8266WIFI_SPI_INTERFACE_NO == 3) for STM32H7
;;;880    #elif (M8266WIFI_SPI_INTERFACE_NO == 4)  
;;;881      #if 1 // if use GPIOE2/5/6 for SPI4 SCK/MISO/MOSI
;;;882    	__HAL_RCC_GPIOE_CLK_ENABLE();					 // Enable the GPIOE Clock
;;;883    	GPIO_InitStructure.Pin       = GPIO_PIN_2 | GPIO_PIN_5 | GPIO_PIN_6;
;;;884    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;885    	GPIO_InitStructure.Speed     = GPIO_SPEED_FREQ_HIGH;
;;;886    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;887      GPIO_InitStructure.Alternate = GPIO_AF5_SPI4;	
;;;888    	HAL_GPIO_Init(GPIOE, &GPIO_InitStructure); 
;;;889      #elif 0 // if use GPIOE12/13/14 for SPI4 SCK/MISO/MOSI
;;;890    	__HAL_RCC_GPIOE_CLK_ENABLE();					 // Enable the GPIOE Clock
;;;891    	GPIO_InitStructure.Pin       = GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14;
;;;892    	GPIO_InitStructure.Mode      = GPIO_MODE_AF_PP;
;;;893    	GPIO_InitStructure.Speed     = GPIO_SPEED_HIGH;
;;;894    	GPIO_InitStructure.Pull      = GPIO_PULLUP;
;;;895      GPIO_InitStructure.Alternate = GPIO_AF5_SPI4;	
;;;896    	HAL_GPIO_Init(GPIOE, &GPIO_InitStructure); 
;;;897    	#else
;;;898    	#error You should specify the GPIO pins used on STM32F7 SPI4 in function M8266HostIf_SPI_Init() fromf the file M8266HostIf_STM32Fxx.c
;;;899    	#endif
;;;900    	__HAL_RCC_SPI4_CLK_ENABLE();
;;;901    	hspi.Instance = SPI4;
;;;902    #else
;;;903    #error Invalid M8266WIFI_SPI_INTERFACE_NO defined in brd_cfg.h 
;;;904    #endif
;;;905    
;;;906      hspi.Init.Mode 									= SPI_MODE_MASTER;
;;;907      hspi.Init.Direction 						= SPI_DIRECTION_2LINES;
;;;908      hspi.Init.DataSize 							= SPI_DATASIZE_8BIT;
;;;909      hspi.Init.CLKPolarity 					= SPI_POLARITY_LOW;
;;;910      hspi.Init.CLKPhase 							= SPI_PHASE_1EDGE;
;;;911      hspi.Init.NSS 									= SPI_NSS_SOFT;
;;;912      hspi.Init.BaudRatePrescaler 		= SPI_BAUDRATEPRESCALER_8;
;;;913      hspi.Init.FirstBit 							= SPI_FIRSTBIT_MSB;
;;;914      hspi.Init.TIMode 								= SPI_TIMODE_DISABLE;
;;;915      hspi.Init.CRCCalculation 				= SPI_CRCCALCULATION_DISABLE;
;;;916      hspi.Init.CRCPolynomial 				= 7;
;;;917      hspi.Init.CRCLength 						= SPI_CRC_LENGTH_DATASIZE;
;;;918      hspi.Init.NSSPMode 							= SPI_NSS_PULSE_DISABLE; //SPI_NSS_PULSE_ENABLE;
;;;919      if (HAL_SPI_Init(&hspi) != HAL_OK)
;;;920      {
;;;921        while(1);
;;;922      }
;;;923      __HAL_SPI_ENABLE(&hspi); 
;;;924    	
;;;925    #else
;;;926    #error YOU SHOULD DEFINED MCU_IS_STM32FX?XX in brd_cfg.h
;;;927    #endif
;;;928    	
;;;929    }
000086  b007              ADD      sp,sp,#0x1c
000088  bd00              POP      {pc}
;;;930    /***********************************************************************************
                          ENDP

00008a  0000              DCW      0x0000
                  |L2.140|
                          DCD      0x40010800
                  |L2.144|
                          DCD      0x40013000

                          AREA ||i.M8266HostIf_SPI_ReadWriteByte||, CODE, READONLY, ALIGN=2

                  M8266HostIf_SPI_ReadWriteByte PROC
;;;1089    ***********************************************************************************/
;;;1090   u8 M8266HostIf_SPI_ReadWriteByte(u8 TxdByte)
000000  b510              PUSH     {r4,lr}
;;;1091   {
000002  4604              MOV      r4,r0
;;;1092   #if  defined(MCU_IS_STM32F1XX) || defined(MCU_IS_STM32F2XX) || defined(MCU_IS_STM32F4XX)	
;;;1093   	while(SPI_I2S_GetFlagStatus(M8266WIFI_INTERFACE_SPI, SPI_I2S_FLAG_TXE) == RESET){} 	//wait SPI TXD Buffer Empty
000004  bf00              NOP      
                  |L3.6|
000006  2102              MOVS     r1,#2
000008  480a              LDR      r0,|L3.52|
00000a  f7fffffe          BL       SPI_I2S_GetFlagStatus
00000e  2800              CMP      r0,#0
000010  d0f9              BEQ      |L3.6|
;;;1094   	SPI_I2S_SendData(M8266WIFI_INTERFACE_SPI, TxdByte); 			//Write the byte to the TXD buffer and then shift out via MOSI
000012  4621              MOV      r1,r4
000014  4807              LDR      r0,|L3.52|
000016  f7fffffe          BL       SPI_I2S_SendData
;;;1095   	while(SPI_I2S_GetFlagStatus(M8266WIFI_INTERFACE_SPI, SPI_I2S_FLAG_RXNE) == RESET){} 	//wait the SPI RXD buffer has received the data from MISO
00001a  bf00              NOP      
                  |L3.28|
00001c  2101              MOVS     r1,#1
00001e  4805              LDR      r0,|L3.52|
000020  f7fffffe          BL       SPI_I2S_GetFlagStatus
000024  2800              CMP      r0,#0
000026  d0f9              BEQ      |L3.28|
;;;1096   	return SPI_I2S_ReceiveData(M8266WIFI_INTERFACE_SPI);  		//return the data received from MISO
000028  4802              LDR      r0,|L3.52|
00002a  f7fffffe          BL       SPI_I2S_ReceiveData
00002e  b2c0              UXTB     r0,r0
;;;1097   #elif defined(MCU_IS_STM32F3XX)	
;;;1098   	while(SPI_I2S_GetFlagStatus(M8266WIFI_INTERFACE_SPI, SPI_I2S_FLAG_TXE) == RESET){} 	//wait SPI TXD Buffer Empty
;;;1099   	SPI_SendData8(M8266WIFI_INTERFACE_SPI, TxdByte); 			//Write the byte to the TXD buffer and then shift out via MOSI
;;;1100   	while(SPI_I2S_GetFlagStatus(M8266WIFI_INTERFACE_SPI, SPI_I2S_FLAG_RXNE) == RESET){} 	//wait the SPI RXD buffer has received the data from MISO
;;;1101   	return SPI_ReceiveData8(M8266WIFI_INTERFACE_SPI);  		//return the data received from MISO
;;;1102   #elif defined(MCU_IS_STM32F7XX) || defined(MCU_IS_STM32L1XX) || defined(MCU_IS_STM32L4XX) || defined(MCU_IS_STM32H7XX)
;;;1103     u8 Rxdata;
;;;1104     HAL_SPI_TransmitReceive(&hspi,&TxdByte,&Rxdata,1, 1000);       
;;;1105    	return Rxdata; 
;;;1106   #else
;;;1107   #error YOU SHOULD DEFINED MCU_IS_STM32F?XX in brd_cfg.h
;;;1108   #endif	
;;;1109   }
000030  bd10              POP      {r4,pc}
                          ENDP

000032  0000              DCW      0x0000
                  |L3.52|
                          DCD      0x40013000

                          AREA ||i.M8266HostIf_SPI_SetSpeed||, CODE, READONLY, ALIGN=2

                  M8266HostIf_SPI_SetSpeed PROC
;;;938     ***********************************************************************************/
;;;939    void M8266HostIf_SPI_SetSpeed(u32 SPI_BaudRatePrescaler)
000000  b510              PUSH     {r4,lr}
;;;940    {
000002  4604              MOV      r4,r0
;;;941    #if  defined(MCU_IS_STM32F1XX) || defined(MCU_IS_STM32F3XX) || defined(MCU_IS_STM32F2XX) || defined(MCU_IS_STM32F4XX)	
;;;942      assert_param(IS_SPI_BAUDRATE_PRESCALER(SPI_BaudRatePrescaler));
;;;943    	M8266WIFI_INTERFACE_SPI->CR1&=0XFFC7;
000004  4807              LDR      r0,|L4.36|
000006  8800              LDRH     r0,[r0,#0]
000008  f64f71c7          MOV      r1,#0xffc7
00000c  4008              ANDS     r0,r0,r1
00000e  4905              LDR      r1,|L4.36|
000010  8008              STRH     r0,[r1,#0]
;;;944    	M8266WIFI_INTERFACE_SPI->CR1|=SPI_BaudRatePrescaler;
000012  4608              MOV      r0,r1
000014  8800              LDRH     r0,[r0,#0]
000016  4320              ORRS     r0,r0,r4
000018  8008              STRH     r0,[r1,#0]
;;;945    	SPI_Cmd(M8266WIFI_INTERFACE_SPI,ENABLE);
00001a  2101              MOVS     r1,#1
00001c  4801              LDR      r0,|L4.36|
00001e  f7fffffe          BL       SPI_Cmd
;;;946    #elif defined(MCU_IS_STM32F7XX) || defined(MCU_IS_STM32L1XX) || defined(MCU_IS_STM32L4XX)
;;;947    	__HAL_SPI_DISABLE(&hspi);
;;;948      hspi.Instance->CR1&=0XFFC7;
;;;949      hspi.Instance->CR1|=SPI_BaudRatePrescaler;
;;;950      __HAL_SPI_ENABLE(&hspi);
;;;951    #elif defined(MCU_IS_STM32H7XX)
;;;952    	__HAL_SPI_DISABLE(&hspi);
;;;953    	hspi.Instance->CFG1 &= ~(7UL<<28);
;;;954    	hspi.Instance->CFG1 |= SPI_BaudRatePrescaler;
;;;955      __HAL_SPI_ENABLE(&hspi);
;;;956    #else
;;;957    #error YOU SHOULD DEFINED MCU_IS_STM32F?XX in brd_cfg.h
;;;958    #endif	
;;;959    } 
000022  bd10              POP      {r4,pc}
;;;960    
                          ENDP

                  |L4.36|
                          DCD      0x40013000

                          AREA ||i.M8266HostIf_Set_SPI_nCS_Pin||, CODE, READONLY, ALIGN=2

                  M8266HostIf_Set_SPI_nCS_Pin PROC
;;;1037    ***********************************************************************************/
;;;1038   void M8266HostIf_Set_SPI_nCS_Pin(u8 level)
000000  b118              CBZ      r0,|L5.10|
;;;1039   {
;;;1040   	  if(level!=0)
;;;1041   		//GPIO_SetBits(M8266WIFI_SPI_nCS_GPIO, M8266WIFI_SPI_nCS_PIN);
;;;1042   #if   defined(MCU_IS_STM32F1XX)
;;;1043   		  M8266WIFI_SPI_nCS_GPIO->BSRR  = M8266WIFI_SPI_nCS_PIN;
000002  2110              MOVS     r1,#0x10
000004  4a03              LDR      r2,|L5.20|
000006  6011              STR      r1,[r2,#0]
000008  e003              B        |L5.18|
                  |L5.10|
;;;1044   #elif defined(MCU_IS_STM32F2XX) || defined(MCU_IS_STM32F4XX) || defined(MCU_IS_STM32H7XX)
;;;1045   		  M8266WIFI_SPI_nCS_GPIO->BSRRL = M8266WIFI_SPI_nCS_PIN;
;;;1046   #elif defined(MCU_IS_STM32F3XX) || defined(MCU_IS_STM32F7XX) || defined(MCU_IS_STM32L1XX) || defined(MCU_IS_STM32L4XX) 
;;;1047   		  M8266WIFI_SPI_nCS_GPIO->BSRR  = M8266WIFI_SPI_nCS_PIN;
;;;1048   #else
;;;1049   #error YOU SHOULD DEFINED MCU_IS_STM32F?XX in brd_cfg.h
;;;1050   #endif
;;;1051   
;;;1052   		else
;;;1053   		//GPIO_ResetBits(M8266WIFI_SPI_nCS_GPIO, M8266WIFI_SPI_nCS_PIN);
;;;1054   #if   defined(MCU_IS_STM32F1XX)
;;;1055   		  M8266WIFI_SPI_nCS_GPIO->BRR   = M8266WIFI_SPI_nCS_PIN;
00000a  2110              MOVS     r1,#0x10
00000c  4a01              LDR      r2,|L5.20|
00000e  1d12              ADDS     r2,r2,#4
000010  6011              STR      r1,[r2,#0]
                  |L5.18|
;;;1056   #elif defined(MCU_IS_STM32F2XX) || defined(MCU_IS_STM32F4XX) || defined(MCU_IS_STM32H7XX)
;;;1057   		  M8266WIFI_SPI_nCS_GPIO->BSRRH = M8266WIFI_SPI_nCS_PIN;
;;;1058   #elif defined(MCU_IS_STM32F3XX) || defined(MCU_IS_STM32F7XX) || defined(MCU_IS_STM32L1XX) || defined(MCU_IS_STM32L4XX)
;;;1059         M8266WIFI_SPI_nCS_GPIO->BSRR  = M8266WIFI_SPI_nCS_PIN<<16;		
;;;1060   #else
;;;1061   #error YOU SHOULD DEFINED MCU_IS_STM32F?XX in brd_cfg.h
;;;1062   #endif
;;;1063   }
000012  4770              BX       lr
;;;1064   
                          ENDP

                  |L5.20|
                          DCD      0x40010810

                          AREA ||i.M8266HostIf_Set_nRESET_Pin||, CODE, READONLY, ALIGN=2

                  M8266HostIf_Set_nRESET_Pin PROC
;;;998     ***********************************************************************************/
;;;999    void M8266HostIf_Set_nRESET_Pin(u8 level)
000000  b120              CBZ      r0,|L6.12|
;;;1000   {
;;;1001   	  if(level!=0)
;;;1002   		//GPIO_SetBits(M8266WIFI_nRESET_GPIO, M8266WIFI_nRESET_PIN);
;;;1003   #if   defined(MCU_IS_STM32F1XX)
;;;1004   		  M8266WIFI_nRESET_GPIO->BSRR  = M8266WIFI_nRESET_PIN;
000002  f44f6100          MOV      r1,#0x800
000006  4a04              LDR      r2,|L6.24|
000008  6011              STR      r1,[r2,#0]
00000a  e004              B        |L6.22|
                  |L6.12|
;;;1005   #elif defined(MCU_IS_STM32F2XX) || defined(MCU_IS_STM32F4XX) || defined(MCU_IS_STM32H7XX)
;;;1006   		  M8266WIFI_nRESET_GPIO->BSRRL = M8266WIFI_nRESET_PIN;
;;;1007   #elif defined(MCU_IS_STM32F3XX) || defined(MCU_IS_STM32F7XX) || defined(MCU_IS_STM32L1XX) || defined(MCU_IS_STM32L4XX)
;;;1008   		  M8266WIFI_nRESET_GPIO->BSRR  = M8266WIFI_nRESET_PIN;
;;;1009   #else
;;;1010   #error YOU SHOULD DEFINED MCU_IS_STM32F?XX in brd_cfg.h
;;;1011   #endif
;;;1012   
;;;1013   		else
;;;1014   		//GPIO_ResetBits(M8266WIFI_nRESET_GPIO, M8266WIFI_nRESET_PIN);
;;;1015   #if   defined(MCU_IS_STM32F1XX)
;;;1016   		  M8266WIFI_nRESET_GPIO->BRR   = M8266WIFI_nRESET_PIN;
00000c  f44f6100          MOV      r1,#0x800
000010  4a01              LDR      r2,|L6.24|
000012  1d12              ADDS     r2,r2,#4
000014  6011              STR      r1,[r2,#0]
                  |L6.22|
;;;1017   #elif defined(MCU_IS_STM32F2XX) || defined(MCU_IS_STM32F4XX) || defined(MCU_IS_STM32H7XX)
;;;1018   		  M8266WIFI_nRESET_GPIO->BSRRH = M8266WIFI_nRESET_PIN;
;;;1019   #elif defined(MCU_IS_STM32F3XX) || defined(MCU_IS_STM32F7XX) || defined(MCU_IS_STM32L1XX) || defined(MCU_IS_STM32L4XX)
;;;1020   		  M8266WIFI_nRESET_GPIO->BSRR  = M8266WIFI_nRESET_PIN<<16;
;;;1021   #else
;;;1022   #error YOU SHOULD DEFINED MCU_IS_STM32F?XX in brd_cfg.h
;;;1023   #endif
;;;1024   }
000016  4770              BX       lr
;;;1025   /***********************************************************************************
                          ENDP

                  |L6.24|
                          DCD      0x40010810

                          AREA ||i.M8266HostIf_delay_us||, CODE, READONLY, ALIGN=1

                  M8266HostIf_delay_us PROC
;;;1073    ***********************************************************************************/
;;;1074   void M8266HostIf_delay_us(u8 nus)
000000  b510              PUSH     {r4,lr}
;;;1075   {
000002  4604              MOV      r4,r0
;;;1076      udelay(nus);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       udelay
;;;1077   }
00000a  bd10              POP      {r4,pc}
;;;1078   
                          ENDP

