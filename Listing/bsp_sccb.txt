; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\bsp_sccb.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\bsp_sccb.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS -I..\..\User -I..\..\Libraries\FWlib\inc -I..\..\User\FATFS\option -I..\..\User\FATFS -I..\..\User\delay -I..\..\User\onenet\inc -I..\..\User\device\inc -I..\..\User\EDP -I..\..\User\onenet\inc -I..\..\User\hwtimer -I..\..\User\JPEGENCODE -I..\..\User\MALLOC -I..\..\User\dht11 -I..\..\User\flame -I..\..\User\warning -I..\..\User\beep -I..\..\User\adc -I..\..\User\IIC -I..\..\Freee-RTOS\include -I..\..\Freee-RTOS\portable\RVDS\ARM_CM3 -I..\..\User\IWDG -I..\..\User\light_moto -I..\..\User\M8266WIFI -I..\..\User\TIMER -I.\RTE\_____ -IF:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -IF:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\..\output\bsp_sccb.crf ..\..\User\sccb\bsp_sccb.c]
                          THUMB

                          AREA ||i.SCCB_Ack||, CODE, READONLY, ALIGN=2

                  SCCB_Ack PROC
;;;114     ********************************************************************/
;;;115    static void SCCB_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;116    {	
;;;117    	SCL_L;
000002  2140              MOVS     r1,#0x40
000004  480b              LDR      r0,|L1.52|
000006  f7fffffe          BL       GPIO_ResetBits
;;;118    	SCCB_delay();
00000a  f7fffffe          BL       SCCB_delay
;;;119    	SDA_L;
00000e  2180              MOVS     r1,#0x80
000010  4808              LDR      r0,|L1.52|
000012  f7fffffe          BL       GPIO_ResetBits
;;;120    	SCCB_delay();
000016  f7fffffe          BL       SCCB_delay
;;;121    	SCL_H;
00001a  2140              MOVS     r1,#0x40
00001c  4805              LDR      r0,|L1.52|
00001e  f7fffffe          BL       GPIO_SetBits
;;;122    	SCCB_delay();
000022  f7fffffe          BL       SCCB_delay
;;;123    	SCL_L;
000026  2140              MOVS     r1,#0x40
000028  4802              LDR      r0,|L1.52|
00002a  f7fffffe          BL       GPIO_ResetBits
;;;124    	SCCB_delay();
00002e  f7fffffe          BL       SCCB_delay
;;;125    }
000032  bd10              POP      {r4,pc}
;;;126    
                          ENDP

                  |L1.52|
                          DCD      0x40011000

                          AREA ||i.SCCB_GPIO_Config||, CODE, READONLY, ALIGN=2

                  SCCB_GPIO_Config PROC
;;;27      ********************************************************************/
;;;28     void SCCB_GPIO_Config(void)
000000  b508              PUSH     {r3,lr}
;;;29     {
;;;30       GPIO_InitTypeDef  GPIO_InitStructure; 
;;;31     	
;;;32     	
;;;33       /* SCL(PC6)、SDA(PC7)管脚配置 */
;;;34     	OV7725_SIO_C_SCK_APBxClock_FUN ( OV7725_SIO_C_GPIO_CLK, ENABLE );
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;35       GPIO_InitStructure.GPIO_Pin =  OV7725_SIO_C_GPIO_PIN ;
00000a  2040              MOVS     r0,#0x40
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;36       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000010  2003              MOVS     r0,#3
000012  f88d0002          STRB     r0,[sp,#2]
;;;37       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;  
000016  2014              MOVS     r0,#0x14
000018  f88d0003          STRB     r0,[sp,#3]
;;;38       GPIO_Init(OV7725_SIO_C_GPIO_PORT, &GPIO_InitStructure);
00001c  4669              MOV      r1,sp
00001e  4807              LDR      r0,|L2.60|
000020  f7fffffe          BL       GPIO_Init
;;;39     	
;;;40     	OV7725_SIO_D_SCK_APBxClock_FUN ( OV7725_SIO_D_GPIO_CLK, ENABLE );
000024  2101              MOVS     r1,#1
000026  2010              MOVS     r0,#0x10
000028  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;41       GPIO_InitStructure.GPIO_Pin =  OV7725_SIO_D_GPIO_PIN ;
00002c  2080              MOVS     r0,#0x80
00002e  f8ad0000          STRH     r0,[sp,#0]
;;;42       GPIO_Init(OV7725_SIO_D_GPIO_PORT, &GPIO_InitStructure);
000032  4669              MOV      r1,sp
000034  4801              LDR      r0,|L2.60|
000036  f7fffffe          BL       GPIO_Init
;;;43     	
;;;44     }
00003a  bd08              POP      {r3,pc}
;;;45     
                          ENDP

                  |L2.60|
                          DCD      0x40011000

                          AREA ||i.SCCB_NoAck||, CODE, READONLY, ALIGN=2

                  SCCB_NoAck PROC
;;;135     ********************************************************************/
;;;136    static void SCCB_NoAck(void)
000000  b510              PUSH     {r4,lr}
;;;137    {	
;;;138    	SCL_L;
000002  2140              MOVS     r1,#0x40
000004  480b              LDR      r0,|L3.52|
000006  f7fffffe          BL       GPIO_ResetBits
;;;139    	SCCB_delay();
00000a  f7fffffe          BL       SCCB_delay
;;;140    	SDA_H;
00000e  2180              MOVS     r1,#0x80
000010  4808              LDR      r0,|L3.52|
000012  f7fffffe          BL       GPIO_SetBits
;;;141    	SCCB_delay();
000016  f7fffffe          BL       SCCB_delay
;;;142    	SCL_H;
00001a  2140              MOVS     r1,#0x40
00001c  4805              LDR      r0,|L3.52|
00001e  f7fffffe          BL       GPIO_SetBits
;;;143    	SCCB_delay();
000022  f7fffffe          BL       SCCB_delay
;;;144    	SCL_L;
000026  2140              MOVS     r1,#0x40
000028  4802              LDR      r0,|L3.52|
00002a  f7fffffe          BL       GPIO_ResetBits
;;;145    	SCCB_delay();
00002e  f7fffffe          BL       SCCB_delay
;;;146    }
000032  bd10              POP      {r4,pc}
;;;147    
                          ENDP

                  |L3.52|
                          DCD      0x40011000

                          AREA ||i.SCCB_ReadByte||, CODE, READONLY, ALIGN=1

                  SCCB_ReadByte PROC
;;;269     **********************************************************************************************************************/           
;;;270    int SCCB_ReadByte(uint8_t* pBuffer, uint16_t length, uint8_t ReadAddress)
000000  b570              PUSH     {r4-r6,lr}
;;;271    {	
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
000006  4616              MOV      r6,r2
;;;272        if(!SCCB_Start())
000008  f7fffffe          BL       SCCB_Start
00000c  b908              CBNZ     r0,|L4.18|
;;;273    	{
;;;274    	    return DISABLE;
00000e  2000              MOVS     r0,#0
                  |L4.16|
;;;275    	}
;;;276        SCCB_SendByte( DEV_ADR );         /* 器件地址 */
;;;277        if( !SCCB_WaitAck() )
;;;278    	{
;;;279    		SCCB_Stop(); 
;;;280    		return DISABLE;
;;;281    	}
;;;282        SCCB_SendByte( ReadAddress );     /* 设置低起始地址 */      
;;;283        SCCB_WaitAck();	
;;;284        SCCB_Stop(); 
;;;285    	
;;;286        if(!SCCB_Start())
;;;287    	{
;;;288    		return DISABLE;
;;;289    	}
;;;290        SCCB_SendByte( DEV_ADR + 1 );     /* 器件地址 */ 
;;;291        if(!SCCB_WaitAck())
;;;292    	{
;;;293    		SCCB_Stop(); 
;;;294    		return DISABLE;
;;;295    	}
;;;296        while(length)
;;;297        {
;;;298          *pBuffer = SCCB_ReceiveByte();
;;;299          if(length == 1)
;;;300    	  {
;;;301    		  SCCB_NoAck();
;;;302    	  }
;;;303          else
;;;304    	  {
;;;305    		SCCB_Ack(); 
;;;306    	  }
;;;307          pBuffer++;
;;;308          length--;
;;;309        }
;;;310        SCCB_Stop();
;;;311        return ENABLE;
;;;312    }
000010  bd70              POP      {r4-r6,pc}
                  |L4.18|
000012  2042              MOVS     r0,#0x42              ;276
000014  f7fffffe          BL       SCCB_SendByte
000018  f7fffffe          BL       SCCB_WaitAck
00001c  b918              CBNZ     r0,|L4.38|
00001e  f7fffffe          BL       SCCB_Stop
000022  2000              MOVS     r0,#0                 ;280
000024  e7f4              B        |L4.16|
                  |L4.38|
000026  4630              MOV      r0,r6                 ;282
000028  f7fffffe          BL       SCCB_SendByte
00002c  f7fffffe          BL       SCCB_WaitAck
000030  f7fffffe          BL       SCCB_Stop
000034  f7fffffe          BL       SCCB_Start
000038  b908              CBNZ     r0,|L4.62|
00003a  2000              MOVS     r0,#0                 ;288
00003c  e7e8              B        |L4.16|
                  |L4.62|
00003e  2043              MOVS     r0,#0x43              ;290
000040  f7fffffe          BL       SCCB_SendByte
000044  f7fffffe          BL       SCCB_WaitAck
000048  b918              CBNZ     r0,|L4.82|
00004a  f7fffffe          BL       SCCB_Stop
00004e  2000              MOVS     r0,#0                 ;294
000050  e7de              B        |L4.16|
                  |L4.82|
000052  e00c              B        |L4.110|
                  |L4.84|
000054  f7fffffe          BL       SCCB_ReceiveByte
000058  7028              STRB     r0,[r5,#0]            ;298
00005a  2c01              CMP      r4,#1                 ;299
00005c  d102              BNE      |L4.100|
00005e  f7fffffe          BL       SCCB_NoAck
000062  e001              B        |L4.104|
                  |L4.100|
000064  f7fffffe          BL       SCCB_Ack
                  |L4.104|
000068  1c6d              ADDS     r5,r5,#1              ;307
00006a  1e60              SUBS     r0,r4,#1              ;308
00006c  b284              UXTH     r4,r0                 ;308
                  |L4.110|
00006e  2c00              CMP      r4,#0                 ;296
000070  d1f0              BNE      |L4.84|
000072  f7fffffe          BL       SCCB_Stop
000076  2001              MOVS     r0,#1                 ;311
000078  e7ca              B        |L4.16|
;;;313    /*********************************************END OF FILE**********************/
                          ENDP


                          AREA ||i.SCCB_ReceiveByte||, CODE, READONLY, ALIGN=2

                  SCCB_ReceiveByte PROC
;;;209     *******************************************************************/
;;;210    static int SCCB_ReceiveByte(void)  
000000  b570              PUSH     {r4-r6,lr}
;;;211    { 
;;;212        uint8_t i=8;
000002  2508              MOVS     r5,#8
;;;213        uint8_t ReceiveByte=0;
000004  2400              MOVS     r4,#0
;;;214    
;;;215        SDA_H;				
000006  2180              MOVS     r1,#0x80
000008  4811              LDR      r0,|L5.80|
00000a  f7fffffe          BL       GPIO_SetBits
;;;216        while(i--)
00000e  e014              B        |L5.58|
                  |L5.16|
;;;217        {
;;;218          ReceiveByte<<=1;      
000010  0660              LSLS     r0,r4,#25
000012  0e04              LSRS     r4,r0,#24
;;;219          SCL_L;
000014  2140              MOVS     r1,#0x40
000016  480e              LDR      r0,|L5.80|
000018  f7fffffe          BL       GPIO_ResetBits
;;;220          SCCB_delay();
00001c  f7fffffe          BL       SCCB_delay
;;;221    	  SCL_H;
000020  2140              MOVS     r1,#0x40
000022  480b              LDR      r0,|L5.80|
000024  f7fffffe          BL       GPIO_SetBits
;;;222          SCCB_delay();	
000028  f7fffffe          BL       SCCB_delay
;;;223          if(SDA_read)
00002c  2180              MOVS     r1,#0x80
00002e  4808              LDR      r0,|L5.80|
000030  f7fffffe          BL       GPIO_ReadInputDataBit
000034  b108              CBZ      r0,|L5.58|
;;;224          {
;;;225            ReceiveByte|=0x01;
000036  f0440401          ORR      r4,r4,#1
                  |L5.58|
00003a  1e28              SUBS     r0,r5,#0              ;216
00003c  f1a50101          SUB      r1,r5,#1              ;216
000040  b2cd              UXTB     r5,r1                 ;216
000042  d1e5              BNE      |L5.16|
;;;226          }
;;;227        }
;;;228        SCL_L;
000044  2140              MOVS     r1,#0x40
000046  4802              LDR      r0,|L5.80|
000048  f7fffffe          BL       GPIO_ResetBits
;;;229        return ReceiveByte;
00004c  4620              MOV      r0,r4
;;;230    }
00004e  bd70              POP      {r4-r6,pc}
;;;231    
                          ENDP

                  |L5.80|
                          DCD      0x40011000

                          AREA ||i.SCCB_SendByte||, CODE, READONLY, ALIGN=2

                  SCCB_SendByte PROC
;;;180     *********************************************************************/
;;;181    static void SCCB_SendByte(uint8_t SendByte) 
000000  b570              PUSH     {r4-r6,lr}
;;;182    {
000002  4604              MOV      r4,r0
;;;183        uint8_t i=8;
000004  2508              MOVS     r5,#8
;;;184        while(i--)
000006  e01b              B        |L6.64|
                  |L6.8|
;;;185        {
;;;186            SCL_L;
000008  2140              MOVS     r1,#0x40
00000a  4812              LDR      r0,|L6.84|
00000c  f7fffffe          BL       GPIO_ResetBits
;;;187            SCCB_delay();
000010  f7fffffe          BL       SCCB_delay
;;;188          if(SendByte&0x80)
000014  f0040080          AND      r0,r4,#0x80
000018  b120              CBZ      r0,|L6.36|
;;;189            SDA_H;  
00001a  2180              MOVS     r1,#0x80
00001c  480d              LDR      r0,|L6.84|
00001e  f7fffffe          BL       GPIO_SetBits
000022  e003              B        |L6.44|
                  |L6.36|
;;;190          else 
;;;191            SDA_L;   
000024  2180              MOVS     r1,#0x80
000026  480b              LDR      r0,|L6.84|
000028  f7fffffe          BL       GPIO_ResetBits
                  |L6.44|
;;;192            SendByte<<=1;
00002c  0660              LSLS     r0,r4,#25
00002e  0e04              LSRS     r4,r0,#24
;;;193            SCCB_delay();
000030  f7fffffe          BL       SCCB_delay
;;;194    		SCL_H;
000034  2140              MOVS     r1,#0x40
000036  4807              LDR      r0,|L6.84|
000038  f7fffffe          BL       GPIO_SetBits
;;;195            SCCB_delay();
00003c  f7fffffe          BL       SCCB_delay
                  |L6.64|
000040  1e28              SUBS     r0,r5,#0              ;184
000042  f1a50101          SUB      r1,r5,#1              ;184
000046  b2cd              UXTB     r5,r1                 ;184
000048  d1de              BNE      |L6.8|
;;;196        }
;;;197        SCL_L;
00004a  2140              MOVS     r1,#0x40
00004c  4801              LDR      r0,|L6.84|
00004e  f7fffffe          BL       GPIO_ResetBits
;;;198    }
000052  bd70              POP      {r4-r6,pc}
;;;199    
                          ENDP

                  |L6.84|
                          DCD      0x40011000

                          AREA ||i.SCCB_Start||, CODE, READONLY, ALIGN=2

                  SCCB_Start PROC
;;;68      ********************************************************************/
;;;69     static int SCCB_Start(void)
000000  b510              PUSH     {r4,lr}
;;;70     {
;;;71     	SDA_H;
000002  2180              MOVS     r1,#0x80
000004  4812              LDR      r0,|L7.80|
000006  f7fffffe          BL       GPIO_SetBits
;;;72     	SCL_H;
00000a  2140              MOVS     r1,#0x40
00000c  4810              LDR      r0,|L7.80|
00000e  f7fffffe          BL       GPIO_SetBits
;;;73     	SCCB_delay();
000012  f7fffffe          BL       SCCB_delay
;;;74     	if(!SDA_read)
000016  2180              MOVS     r1,#0x80
000018  480d              LDR      r0,|L7.80|
00001a  f7fffffe          BL       GPIO_ReadInputDataBit
00001e  b908              CBNZ     r0,|L7.36|
;;;75     	return DISABLE;	/* SDA线为低电平则总线忙,退出 */
000020  2000              MOVS     r0,#0
                  |L7.34|
;;;76     	SDA_L;
;;;77     	SCCB_delay();
;;;78     	if(SDA_read) 
;;;79     	return DISABLE;	/* SDA线为高电平则总线出错,退出 */
;;;80     	SDA_L;
;;;81     	SCCB_delay();
;;;82     	return ENABLE;
;;;83     }
000022  bd10              POP      {r4,pc}
                  |L7.36|
000024  2180              MOVS     r1,#0x80              ;76
000026  480a              LDR      r0,|L7.80|
000028  f7fffffe          BL       GPIO_ResetBits
00002c  f7fffffe          BL       SCCB_delay
000030  2180              MOVS     r1,#0x80              ;78
000032  4807              LDR      r0,|L7.80|
000034  f7fffffe          BL       GPIO_ReadInputDataBit
000038  b108              CBZ      r0,|L7.62|
00003a  2000              MOVS     r0,#0                 ;79
00003c  e7f1              B        |L7.34|
                  |L7.62|
00003e  2180              MOVS     r1,#0x80              ;80
000040  4803              LDR      r0,|L7.80|
000042  f7fffffe          BL       GPIO_ResetBits
000046  f7fffffe          BL       SCCB_delay
00004a  2001              MOVS     r0,#1                 ;82
00004c  e7e9              B        |L7.34|
;;;84     
                          ENDP

00004e  0000              DCW      0x0000
                  |L7.80|
                          DCD      0x40011000

                          AREA ||i.SCCB_Stop||, CODE, READONLY, ALIGN=2

                  SCCB_Stop PROC
;;;93      ********************************************************************/
;;;94     static void SCCB_Stop(void)
000000  b510              PUSH     {r4,lr}
;;;95     {
;;;96     	SCL_L;
000002  2140              MOVS     r1,#0x40
000004  480b              LDR      r0,|L8.52|
000006  f7fffffe          BL       GPIO_ResetBits
;;;97     	SCCB_delay();
00000a  f7fffffe          BL       SCCB_delay
;;;98     	SDA_L;
00000e  2180              MOVS     r1,#0x80
000010  4808              LDR      r0,|L8.52|
000012  f7fffffe          BL       GPIO_ResetBits
;;;99     	SCCB_delay();
000016  f7fffffe          BL       SCCB_delay
;;;100    	SCL_H;
00001a  2140              MOVS     r1,#0x40
00001c  4805              LDR      r0,|L8.52|
00001e  f7fffffe          BL       GPIO_SetBits
;;;101    	SCCB_delay();
000022  f7fffffe          BL       SCCB_delay
;;;102    	SDA_H;
000026  2180              MOVS     r1,#0x80
000028  4802              LDR      r0,|L8.52|
00002a  f7fffffe          BL       GPIO_SetBits
;;;103    	SCCB_delay();
00002e  f7fffffe          BL       SCCB_delay
;;;104    }
000032  bd10              POP      {r4,pc}
;;;105    
                          ENDP

                  |L8.52|
                          DCD      0x40011000

                          AREA ||i.SCCB_WaitAck||, CODE, READONLY, ALIGN=2

                  SCCB_WaitAck PROC
;;;154     ********************************************************************/
;;;155    static int SCCB_WaitAck(void) 	
000000  b510              PUSH     {r4,lr}
;;;156    {
;;;157    	SCL_L;
000002  2140              MOVS     r1,#0x40
000004  4810              LDR      r0,|L9.72|
000006  f7fffffe          BL       GPIO_ResetBits
;;;158    	SCCB_delay();
00000a  f7fffffe          BL       SCCB_delay
;;;159    	SDA_H;			
00000e  2180              MOVS     r1,#0x80
000010  480d              LDR      r0,|L9.72|
000012  f7fffffe          BL       GPIO_SetBits
;;;160    	SCCB_delay();
000016  f7fffffe          BL       SCCB_delay
;;;161    	SCL_H;
00001a  2140              MOVS     r1,#0x40
00001c  480a              LDR      r0,|L9.72|
00001e  f7fffffe          BL       GPIO_SetBits
;;;162    	SCCB_delay();
000022  f7fffffe          BL       SCCB_delay
;;;163    	if(SDA_read)
000026  2180              MOVS     r1,#0x80
000028  4807              LDR      r0,|L9.72|
00002a  f7fffffe          BL       GPIO_ReadInputDataBit
00002e  b128              CBZ      r0,|L9.60|
;;;164    	{
;;;165          SCL_L;
000030  2140              MOVS     r1,#0x40
000032  4805              LDR      r0,|L9.72|
000034  f7fffffe          BL       GPIO_ResetBits
;;;166          return DISABLE;
000038  2000              MOVS     r0,#0
                  |L9.58|
;;;167    	}
;;;168    	SCL_L;
;;;169    	return ENABLE;
;;;170    }
00003a  bd10              POP      {r4,pc}
                  |L9.60|
00003c  2140              MOVS     r1,#0x40              ;168
00003e  4802              LDR      r0,|L9.72|
000040  f7fffffe          BL       GPIO_ResetBits
000044  2001              MOVS     r0,#1                 ;169
000046  e7f8              B        |L9.58|
;;;171    
                          ENDP

                  |L9.72|
                          DCD      0x40011000

                          AREA ||i.SCCB_WriteByte||, CODE, READONLY, ALIGN=1

                  SCCB_WriteByte PROC
;;;242     *****************************************************************************************/           
;;;243    int SCCB_WriteByte( uint16_t WriteAddress , uint8_t SendByte )
000000  b570              PUSH     {r4-r6,lr}
;;;244    {		
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;245        if(!SCCB_Start())
000006  f7fffffe          BL       SCCB_Start
00000a  b908              CBNZ     r0,|L10.16|
;;;246    	{
;;;247    	    return DISABLE;
00000c  2000              MOVS     r0,#0
                  |L10.14|
;;;248    	}
;;;249        SCCB_SendByte( DEV_ADR );                    /* 器件地址 */
;;;250        if( !SCCB_WaitAck() )
;;;251    	{
;;;252    		SCCB_Stop(); 
;;;253    		return DISABLE;
;;;254    	}
;;;255        SCCB_SendByte((uint8_t)(WriteAddress & 0x00FF));   /* 设置低起始地址 */      
;;;256        SCCB_WaitAck();	
;;;257        SCCB_SendByte(SendByte);
;;;258        SCCB_WaitAck();   
;;;259        SCCB_Stop(); 
;;;260        return ENABLE;
;;;261    }
00000e  bd70              POP      {r4-r6,pc}
                  |L10.16|
000010  2042              MOVS     r0,#0x42              ;249
000012  f7fffffe          BL       SCCB_SendByte
000016  f7fffffe          BL       SCCB_WaitAck
00001a  b918              CBNZ     r0,|L10.36|
00001c  f7fffffe          BL       SCCB_Stop
000020  2000              MOVS     r0,#0                 ;253
000022  e7f4              B        |L10.14|
                  |L10.36|
000024  b2e0              UXTB     r0,r4                 ;255
000026  f7fffffe          BL       SCCB_SendByte
00002a  f7fffffe          BL       SCCB_WaitAck
00002e  4628              MOV      r0,r5                 ;257
000030  f7fffffe          BL       SCCB_SendByte
000034  f7fffffe          BL       SCCB_WaitAck
000038  f7fffffe          BL       SCCB_Stop
00003c  2001              MOVS     r0,#1                 ;260
00003e  e7e6              B        |L10.14|
;;;262    
                          ENDP


                          AREA ||i.SCCB_delay||, CODE, READONLY, ALIGN=1

                  SCCB_delay PROC
;;;52      ********************************************************************/
;;;53     static void SCCB_delay(void)
000000  f44f70c8          MOV      r0,#0x190
;;;54     {	
;;;55        uint16_t i = 400; 
;;;56        while(i) 
000004  e001              B        |L11.10|
                  |L11.6|
;;;57        { 
;;;58          i--; 
000006  1e41              SUBS     r1,r0,#1
000008  b288              UXTH     r0,r1
                  |L11.10|
00000a  2800              CMP      r0,#0                 ;56
00000c  d1fb              BNE      |L11.6|
;;;59        } 
;;;60     }
00000e  4770              BX       lr
;;;61     
                          ENDP

