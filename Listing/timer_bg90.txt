; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\timer_bg90.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\timer_bg90.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS -I..\..\User -I..\..\Libraries\FWlib\inc -I..\..\User\FATFS\option -I..\..\User\FATFS -I..\..\User\delay -I..\..\User\onenet\inc -I..\..\User\device\inc -I..\..\User\EDP -I..\..\User\onenet\inc -I..\..\User\hwtimer -I..\..\User\JPEGENCODE -I..\..\User\MALLOC -I..\..\User\dht11 -I..\..\User\flame -I..\..\User\warning -I..\..\User\beep -I..\..\User\adc -I..\..\User\IIC -I..\..\Freee-RTOS\include -I..\..\Freee-RTOS\portable\RVDS\ARM_CM3 -I..\..\User\IWDG -I..\..\User\light_moto -I..\..\User\M8266WIFI -I..\..\User\TIMER -I.\RTE\_____ -IF:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -IF:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\..\output\timer_bg90.crf ..\..\User\TIMER\timer_BG90.c]
                          THUMB

                          AREA ||i.GPIO||, CODE, READONLY, ALIGN=2

                  GPIO PROC
;;;4      
;;;5      void GPIO(void)
000000  b508              PUSH     {r3,lr}
;;;6      {
;;;7      	//不采用复用功能，会把引脚变换
;;;8      	
;;;9      	  GPIO_InitTypeDef GPIO_InitStructure;
;;;10         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);
000002  2101              MOVS     r1,#1
000004  2008              MOVS     r0,#8
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;11     	
;;;12     		GPIO_InitStructure.GPIO_Mode=GPIO_Mode_AF_PP;
00000a  2018              MOVS     r0,#0x18
00000c  f88d0003          STRB     r0,[sp,#3]
;;;13     	  GPIO_InitStructure.GPIO_Pin=(GPIO_Pin_8); 
000010  f44f7080          MOV      r0,#0x100
000014  f8ad0000          STRH     r0,[sp,#0]
;;;14         GPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz;	
000018  2003              MOVS     r0,#3
00001a  f88d0002          STRB     r0,[sp,#2]
;;;15     		GPIO_Init(GPIOB,&GPIO_InitStructure);		
00001e  4669              MOV      r1,sp
000020  4801              LDR      r0,|L1.40|
000022  f7fffffe          BL       GPIO_Init
;;;16     
;;;17     }
000026  bd08              POP      {r3,pc}
;;;18     
                          ENDP

                  |L1.40|
                          DCD      0x40010c00

                          AREA ||i.Get_angle||, CODE, READONLY, ALIGN=2

                  Get_angle PROC
;;;70     	
;;;71     	u16 Get_angle(int jiaodu)//返回值类型一定要是u16     因为arr的值大于一个字节
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;72     	{
000004  4682              MOV      r10,r0
;;;73     		 u16 zkb=0;
000006  f04f0b00          MOV      r11,#0
;;;74     		//0.5/45=time/0.18   ==>   time=0.002ms  ==>每转动0.18角度走时0.002ms=2us
;;;75     //    zkb=jiaodu*14+250;//错误的
;;;76     		if(jiaodu>0)
00000a  f1ba0f00          CMP      r10,#0
00000e  dd12              BLE      |L2.54|
;;;77     		zkb=185+jiaodu*0.11;//250个2us+（角度/精度）=占空比
000010  4650              MOV      r0,r10
000012  f7fffffe          BL       __aeabi_i2d
000016  4680              MOV      r8,r0
000018  4a12              LDR      r2,|L2.100|
00001a  4b13              LDR      r3,|L2.104|
00001c  f7fffffe          BL       __aeabi_dmul
000020  4606              MOV      r6,r0
000022  2200              MOVS     r2,#0
000024  4b11              LDR      r3,|L2.108|
000026  f7fffffe          BL       __aeabi_dadd
00002a  4604              MOV      r4,r0
00002c  f7fffffe          BL       __aeabi_d2uiz
000030  fa1ffb80          UXTH     r11,r0
000034  e013              B        |L2.94|
                  |L2.54|
;;;78     		else
;;;79     			{
;;;80     		jiaodu=-jiaodu;
000036  f1ca0a00          RSB      r10,r10,#0
;;;81     		zkb=185-jiaodu*0.11;
00003a  4650              MOV      r0,r10
00003c  f7fffffe          BL       __aeabi_i2d
000040  4606              MOV      r6,r0
000042  4a08              LDR      r2,|L2.100|
000044  4b08              LDR      r3,|L2.104|
000046  f7fffffe          BL       __aeabi_dmul
00004a  4604              MOV      r4,r0
00004c  2200              MOVS     r2,#0
00004e  4b07              LDR      r3,|L2.108|
000050  f7fffffe          BL       __aeabi_drsub
000054  4680              MOV      r8,r0
000056  f7fffffe          BL       __aeabi_d2uiz
00005a  fa1ffb80          UXTH     r11,r0
                  |L2.94|
;;;82     			}
;;;83     		return zkb;  
00005e  4658              MOV      r0,r11
;;;84     	} 	
000060  e8bd9ff0          POP      {r4-r12,pc}
;;;85     	
                          ENDP

                  |L2.100|
                          DCD      0xc28f5c29
                  |L2.104|
                          DCD      0x3fbc28f5
                  |L2.108|
                          DCD      0x40672000

                          AREA ||i.Set_angle||, CODE, READONLY, ALIGN=2

                  Set_angle PROC
;;;86     	
;;;87     	void Set_angle(_Bool dir,u8 angle)
000000  b570              PUSH     {r4-r6,lr}
;;;88      {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;89     	static u8 pre_angel=0;
;;;90     	 if(dir)
000006  b175              CBZ      r5,|L3.38|
;;;91     	 {
;;;92     		 pre_angel=pre_angel+angle;
000008  480e              LDR      r0,|L3.68|
00000a  7800              LDRB     r0,[r0,#0]  ; pre_angel
00000c  4420              ADD      r0,r0,r4
00000e  490d              LDR      r1,|L3.68|
000010  7008              STRB     r0,[r1,#0]
;;;93     		 TIM_SetCompare3(TIM3, Get_angle(pre_angel));
000012  4608              MOV      r0,r1
000014  7800              LDRB     r0,[r0,#0]  ; pre_angel
000016  f7fffffe          BL       Get_angle
00001a  4606              MOV      r6,r0
00001c  4631              MOV      r1,r6
00001e  480a              LDR      r0,|L3.72|
000020  f7fffffe          BL       TIM_SetCompare3
000024  e00d              B        |L3.66|
                  |L3.38|
;;;94     		 
;;;95     	 }
;;;96     	  else
;;;97     	 {
;;;98     		 		 pre_angel=pre_angel-angle;
000026  4807              LDR      r0,|L3.68|
000028  7800              LDRB     r0,[r0,#0]  ; pre_angel
00002a  1b00              SUBS     r0,r0,r4
00002c  4905              LDR      r1,|L3.68|
00002e  7008              STRB     r0,[r1,#0]
;;;99     
;;;100    		 TIM_SetCompare3(TIM3, Get_angle(pre_angel));
000030  4608              MOV      r0,r1
000032  7800              LDRB     r0,[r0,#0]  ; pre_angel
000034  f7fffffe          BL       Get_angle
000038  4606              MOV      r6,r0
00003a  4631              MOV      r1,r6
00003c  4802              LDR      r0,|L3.72|
00003e  f7fffffe          BL       TIM_SetCompare3
                  |L3.66|
;;;101    		 
;;;102    	 }
;;;103    	 
;;;104     }
000042  bd70              POP      {r4-r6,pc}
;;;105    	
                          ENDP

                  |L3.68|
                          DCD      pre_angel
                  |L3.72|
                          DCD      0x40000400

                          AREA ||i.TIM4_PWM_Init||, CODE, READONLY, ALIGN=2

                  TIM4_PWM_Init PROC
;;;21     //如输出一个周期为20ms的方波则arr为199，psc为7199（计数一次0.1ms）
;;;22     void TIM4_PWM_Init()
000000  b500              PUSH     {lr}
;;;23     	{
000002  b089              SUB      sp,sp,#0x24
;;;24     	  
;;;25     		GPIO_InitTypeDef GPIO_InitStructure;   //声明一个结构体变量，用来初始化GPIO
;;;26     
;;;27     	TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;//声明一个结构体变量，用来初始化定时器
;;;28     
;;;29     	TIM_OCInitTypeDef TIM_OCInitStructure;//根据TIM_OCInitStruct中指定的参数初始化外设TIMx
;;;30     	/* 开启时钟 */
;;;31     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);
000004  2101              MOVS     r1,#1
000006  2008              MOVS     r0,#8
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;32     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE);
00000c  2101              MOVS     r1,#1
00000e  2002              MOVS     r0,#2
000010  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;33     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);
000014  2101              MOVS     r1,#1
000016  4608              MOV      r0,r1
000018  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;34     
;;;35     	/*  配置GPIO的模式和IO口 */
;;;36     	GPIO_InitStructure.GPIO_Pin=GPIO_Pin_5;// PC6
00001c  2020              MOVS     r0,#0x20
00001e  f8ad0020          STRH     r0,[sp,#0x20]
;;;37     	GPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz;
000022  2003              MOVS     r0,#3
000024  f88d0022          STRB     r0,[sp,#0x22]
;;;38     	GPIO_InitStructure.GPIO_Mode=GPIO_Mode_AF_PP;//复用推挽输出
000028  2018              MOVS     r0,#0x18
00002a  f88d0023          STRB     r0,[sp,#0x23]
;;;39     	GPIO_Init(GPIOB,&GPIO_InitStructure);
00002e  a908              ADD      r1,sp,#0x20
000030  4822              LDR      r0,|L4.188|
000032  f7fffffe          BL       GPIO_Init
;;;40     	
;;;41     	//TIM4定时器初始化
;;;42     	TIM_TimeBaseInitStructure.TIM_Period = 199; //PWM 频率=72000/(199+1)=36Khz//设置自动重装载寄存器周期的值
000036  20c7              MOVS     r0,#0xc7
000038  f8ad0018          STRH     r0,[sp,#0x18]
;;;43     	TIM_TimeBaseInitStructure.TIM_Prescaler = 7199;//设置用来作为TIMx时钟频率预分频值
00003c  f641401f          MOV      r0,#0x1c1f
000040  f8ad0014          STRH     r0,[sp,#0x14]
;;;44     	TIM_TimeBaseInitStructure.TIM_ClockDivision = 0;//设置时钟分割:TDTS = Tck_tim
000044  2000              MOVS     r0,#0
000046  f8ad001a          STRH     r0,[sp,#0x1a]
;;;45     	TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;	//TIM向上计数模式
00004a  f8ad0016          STRH     r0,[sp,#0x16]
;;;46     	TIM_TimeBaseInit(TIM3, & TIM_TimeBaseInitStructure);
00004e  a905              ADD      r1,sp,#0x14
000050  481b              LDR      r0,|L4.192|
000052  f7fffffe          BL       TIM_TimeBaseInit
;;;47     
;;;48       GPIO_PinRemapConfig(GPIO_PartialRemap_TIM3,ENABLE);//改变指定管脚的映射	//pC6
000056  2101              MOVS     r1,#1
000058  481a              LDR      r0,|L4.196|
00005a  f7fffffe          BL       GPIO_PinRemapConfig
;;;49     
;;;50     	//PWM初始化	  //根据TIM_OCInitStruct中指定的参数初始化外设TIMx
;;;51     	TIM_OCInitStructure.TIM_OCMode=TIM_OCMode_PWM1;
00005e  2060              MOVS     r0,#0x60
000060  f8ad0004          STRH     r0,[sp,#4]
;;;52     	TIM_OCInitStructure.TIM_OutputState=TIM_OutputState_Enable;//PWM输出使能
000064  2001              MOVS     r0,#1
000066  f8ad0006          STRH     r0,[sp,#6]
;;;53     	TIM_OCInitStructure.TIM_OCPolarity=TIM_OCPolarity_Low;
00006a  2002              MOVS     r0,#2
00006c  f8ad000c          STRH     r0,[sp,#0xc]
;;;54     
;;;55     	TIM_OC2Init(TIM3,&TIM_OCInitStructure);
000070  a901              ADD      r1,sp,#4
000072  4813              LDR      r0,|L4.192|
000074  f7fffffe          BL       TIM_OC2Init
;;;56     	//注意此处初始化时TIM_OC1Init而不是TIM_OCInit，否则会出错。因为固件库的版本不一样。
;;;57     	TIM_OC2PreloadConfig(TIM3, TIM_OCPreload_Enable);//使能或者失能TIMx在CCR1上的预装载寄存器
000078  2108              MOVS     r1,#8
00007a  4811              LDR      r0,|L4.192|
00007c  f7fffffe          BL       TIM_OC2PreloadConfig
;;;58     	TIM_Cmd(TIM3,ENABLE);//使能或者失能TIMx外设
000080  2101              MOVS     r1,#1
000082  480f              LDR      r0,|L4.192|
000084  f7fffffe          BL       TIM_Cmd
;;;59     	 TIM_SetCompare2(TIM3, 195);
000088  21c3              MOVS     r1,#0xc3
00008a  480d              LDR      r0,|L4.192|
00008c  f7fffffe          BL       TIM_SetCompare2
;;;60     	
;;;61     	mDelay(500);
000090  f44f70fa          MOV      r0,#0x1f4
000094  f7fffffe          BL       mDelay
;;;62     	TIM_SetCompare2(TIM3, 175);
000098  21af              MOVS     r1,#0xaf
00009a  4809              LDR      r0,|L4.192|
00009c  f7fffffe          BL       TIM_SetCompare2
;;;63     			 TIM_SetCompare2(TIM3, 195);
0000a0  21c3              MOVS     r1,#0xc3
0000a2  4807              LDR      r0,|L4.192|
0000a4  f7fffffe          BL       TIM_SetCompare2
;;;64     	
;;;65     	mDelay(500);
0000a8  f44f70fa          MOV      r0,#0x1f4
0000ac  f7fffffe          BL       mDelay
;;;66     	TIM_SetCompare2(TIM3, 175);
0000b0  21af              MOVS     r1,#0xaf
0000b2  4803              LDR      r0,|L4.192|
0000b4  f7fffffe          BL       TIM_SetCompare2
;;;67     
;;;68     	
;;;69     	}
0000b8  b009              ADD      sp,sp,#0x24
0000ba  bd00              POP      {pc}
;;;70     	
                          ENDP

                  |L4.188|
                          DCD      0x40010c00
                  |L4.192|
                          DCD      0x40000400
                  |L4.196|
                          DCD      0x001a0800

                          AREA ||.data||, DATA, ALIGN=0

                  pre_angel
000000  00                DCB      0x00
