; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\m8266.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\m8266.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS -I..\..\User -I..\..\Libraries\FWlib\inc -I..\..\User\FATFS\option -I..\..\User\FATFS -I..\..\User\delay -I..\..\User\onenet\inc -I..\..\User\device\inc -I..\..\User\EDP -I..\..\User\onenet\inc -I..\..\User\hwtimer -I..\..\User\JPEGENCODE -I..\..\User\MALLOC -I..\..\User\dht11 -I..\..\User\flame -I..\..\User\warning -I..\..\User\beep -I..\..\User\adc -I..\..\User\IIC -I..\..\Freee-RTOS\include -I..\..\Freee-RTOS\portable\RVDS\ARM_CM3 -I..\..\User\IWDG -I..\..\User\light_moto -I..\..\User\M8266WIFI -I..\..\User\TIMER -I.\RTE\_____ -IF:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -IF:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\..\output\m8266.crf ..\..\User\M8266WIFI\M8266.c]
                          THUMB

                          AREA ||i.M8266HostIf_Init||, CODE, READONLY, ALIGN=1

                  M8266HostIf_Init PROC
;;;39     
;;;40     void M8266HostIf_Init(void)
000000  b510              PUSH     {r4,lr}
;;;41     {
;;;42     	 M8266HostIf_GPIO_CS_RESET_Init();
000002  f7fffffe          BL       M8266HostIf_GPIO_CS_RESET_Init
;;;43     	
;;;44     	 M8266HostIf_SPI_Init();
000006  f7fffffe          BL       M8266HostIf_SPI_Init
;;;45     //	 M8266HostIf_SPI_SetSpeed(SPI_BaudRatePrescaler_8);
;;;46     	
;;;47     }
00000a  bd10              POP      {r4,pc}
;;;48     
                          ENDP


                          AREA ||i.M8266_Clear||, CODE, READONLY, ALIGN=2

                  M8266_Clear PROC
;;;161    
;;;162    void M8266_Clear(void)
000000  b510              PUSH     {r4,lr}
;;;163    {
;;;164    
;;;165    	memset(M8266buf, 0, sizeof(M8266buf));
000002  2180              MOVS     r1,#0x80
000004  4803              LDR      r0,|L2.20|
000006  f7fffffe          BL       __aeabi_memclr
;;;166    	received = 0;
00000a  2000              MOVS     r0,#0
00000c  4902              LDR      r1,|L2.24|
00000e  8008              STRH     r0,[r1,#0]
;;;167    
;;;168    }
000010  bd10              POP      {r4,pc}
;;;169    
                          ENDP

000012  0000              DCW      0x0000
                  |L2.20|
                          DCD      M8266buf
                  |L2.24|
                          DCD      received

                          AREA ||i.M8266_GetIPD||, CODE, READONLY, ALIGN=2

                  M8266_GetIPD PROC
;;;141    
;;;142    unsigned char *M8266_GetIPD(unsigned short timeOut)
000000  b538              PUSH     {r3-r5,lr}
;;;143    {
000002  4605              MOV      r5,r0
;;;144    
;;;145    	char *ptrIPD = NULL;
000004  2400              MOVS     r4,#0
;;;146    	if(M8266WIFI_SPI_Has_DataReceived())
000006  f7fffffe          BL       M8266WIFI_SPI_Has_DataReceived
00000a  b160              CBZ      r0,|L3.38|
;;;147    	{
;;;148    		received = M8266WIFI_SPI_RecvData(M8266buf, RECV_DATA_MAX_SIZE, 1000, &link_no, &link_status);
00000c  4807              LDR      r0,|L3.44|
00000e  4b08              LDR      r3,|L3.48|
000010  f44f727a          MOV      r2,#0x3e8
000014  2180              MOVS     r1,#0x80
000016  9000              STR      r0,[sp,#0]
000018  4806              LDR      r0,|L3.52|
00001a  f7fffffe          BL       M8266WIFI_SPI_RecvData
00001e  4906              LDR      r1,|L3.56|
000020  8008              STRH     r0,[r1,#0]
;;;149    			
;;;150    
;;;151    		//if(M8266_WaitRecive()==REV_OK)								//如果接收完成
;;;152    		//{
;;;153    						return (unsigned char *)(M8266buf);
000022  4804              LDR      r0,|L3.52|
                  |L3.36|
;;;154    		
;;;155    		//}
;;;156    	}
;;;157    	return NULL;
;;;158    
;;;159    
;;;160    }
000024  bd38              POP      {r3-r5,pc}
                  |L3.38|
000026  2000              MOVS     r0,#0                 ;157
000028  e7fc              B        |L3.36|
;;;161    
                          ENDP

00002a  0000              DCW      0x0000
                  |L3.44|
                          DCD      link_status
                  |L3.48|
                          DCD      link_no
                  |L3.52|
                          DCD      M8266buf
                  |L3.56|
                          DCD      received

                          AREA ||i.M8266_NetCheck||, CODE, READONLY, ALIGN=2

                  M8266_NetCheck PROC
;;;171    
;;;172    u8 M8266_NetCheck()
000000  b51f              PUSH     {r0-r4,lr}
;;;173    {
;;;174    	u16 status;
;;;175    	M8266WIFI_SPI_Get_STA_Connection_Status(&STA_Status,&status);
000002  a903              ADD      r1,sp,#0xc
000004  4824              LDR      r0,|L4.152|
000006  f7fffffe          BL       M8266WIFI_SPI_Get_STA_Connection_Status
;;;176    	if(status==0) printf("sta check faild");
00000a  f8bd000c          LDRH     r0,[sp,#0xc]
00000e  b910              CBNZ     r0,|L4.22|
000010  a022              ADR      r0,|L4.156|
000012  f7fffffe          BL       __2printf
                  |L4.22|
;;;177    	M8266WIFI_SPI_Query_Connection(link_no,NULL,&TCP_Status,NULL,NULL,NULL,&status);
000016  a803              ADD      r0,sp,#0xc
000018  2100              MOVS     r1,#0
00001a  9100              STR      r1,[sp,#0]
00001c  460b              MOV      r3,r1
00001e  4a23              LDR      r2,|L4.172|
000020  e9cd1001          STRD     r1,r0,[sp,#4]
000024  4822              LDR      r0,|L4.176|
000026  7800              LDRB     r0,[r0,#0]  ; link_no
000028  f7fffffe          BL       M8266WIFI_SPI_Query_Connection
;;;178    	if(status==0) printf("tcp check faild");
00002c  f8bd000c          LDRH     r0,[sp,#0xc]
000030  b910              CBNZ     r0,|L4.56|
000032  a020              ADR      r0,|L4.180|
000034  f7fffffe          BL       __2printf
                  |L4.56|
;;;179    	switch(STA_Status)
000038  4817              LDR      r0,|L4.152|
00003a  7800              LDRB     r0,[r0,#0]  ; STA_Status
00003c  2806              CMP      r0,#6
00003e  d218              BCS      |L4.114|
000040  e8dff000          TBB      [pc,r0]
000044  0317070b          DCB      0x03,0x17,0x07,0x0b
000048  0f13              DCB      0x0f,0x13
;;;180    	{
;;;181    		case 0:  printf("没有连接\r\n"); break;
00004a  a01e              ADR      r0,|L4.196|
00004c  f7fffffe          BL       __2printf
000050  e00f              B        |L4.114|
;;;182    		case 2: printf("连接失败，密码错误\r\n");break;
000052  a01f              ADR      r0,|L4.208|
000054  f7fffffe          BL       __2printf
000058  e00b              B        |L4.114|
;;;183    		case 3: printf("连接失败，没有指定ssid\r\n");break;
00005a  a023              ADR      r0,|L4.232|
00005c  f7fffffe          BL       __2printf
000060  e007              B        |L4.114|
;;;184    		case 4: printf("连接失败，其他原因\r\n");break;
000062  a028              ADR      r0,|L4.260|
000064  f7fffffe          BL       __2printf
000068  e003              B        |L4.114|
;;;185    		case 5: printf("连接正常\r\n");break;
00006a  a02c              ADR      r0,|L4.284|
00006c  f7fffffe          BL       __2printf
000070  bf00              NOP      
                  |L4.114|
000072  bf00              NOP                            ;181
;;;186    		
;;;187    	}
;;;188    	if(STA_Status!=5)
000074  4808              LDR      r0,|L4.152|
000076  7800              LDRB     r0,[r0,#0]  ; STA_Status
000078  2805              CMP      r0,#5
00007a  d002              BEQ      |L4.130|
;;;189    		return 1;
00007c  2001              MOVS     r0,#1
                  |L4.126|
;;;190    	else if(TCP_Status!=3)
;;;191    	{
;;;192    	printf("tcp链接丢失");
;;;193    	return 2;
;;;194    	}
;;;195    	else
;;;196    		return 0;
;;;197    
;;;198    }
00007e  b004              ADD      sp,sp,#0x10
000080  bd10              POP      {r4,pc}
                  |L4.130|
000082  480a              LDR      r0,|L4.172|
000084  7800              LDRB     r0,[r0,#0]            ;190  ; TCP_Status
000086  2803              CMP      r0,#3                 ;190
000088  d004              BEQ      |L4.148|
00008a  a027              ADR      r0,|L4.296|
00008c  f7fffffe          BL       __2printf
000090  2002              MOVS     r0,#2                 ;193
000092  e7f4              B        |L4.126|
                  |L4.148|
000094  2000              MOVS     r0,#0                 ;196
000096  e7f2              B        |L4.126|
;;;199    
                          ENDP

                  |L4.152|
                          DCD      STA_Status
                  |L4.156|
00009c  73746120          DCB      "sta check faild",0
0000a0  63686563
0000a4  6b206661
0000a8  696c6400
                  |L4.172|
                          DCD      TCP_Status
                  |L4.176|
                          DCD      link_no
                  |L4.180|
0000b4  74637020          DCB      "tcp check faild",0
0000b8  63686563
0000bc  6b206661
0000c0  696c6400
                  |L4.196|
0000c4  c3bbd3d0          DCB      195,187,211,208,193,172,189,211,"\r\n",0
0000c8  c1acbdd3
0000cc  0d0a00  
0000cf  00                DCB      0
                  |L4.208|
0000d0  c1acbdd3          DCB      193,172,189,211,202,167,176,220,163,172,195,220,194,235,180
0000d4  caa7b0dc
0000d8  a3acc3dc
0000dc  c2ebb4  
0000df  edcef30d          DCB      237,206,243,"\r\n",0
0000e3  0a00    
0000e5  00                DCB      0
0000e6  00                DCB      0
0000e7  00                DCB      0
                  |L4.232|
0000e8  c1acbdd3          DCB      193,172,189,211,202,167,176,220,163,172,195,187,211,208,214
0000ec  caa7b0dc
0000f0  a3acc3bb
0000f4  d3d0d6  
0000f7  b8b6a873          DCB      184,182,168,"ssid\r\n",0
0000fb  7369640d
0000ff  0a00    
000101  00                DCB      0
000102  00                DCB      0
000103  00                DCB      0
                  |L4.260|
000104  c1acbdd3          DCB      193,172,189,211,202,167,176,220,163,172,198,228,203,251,212
000108  caa7b0dc
00010c  a3acc6e4
000110  cbfbd4  
000113  add2f20d          DCB      173,210,242,"\r\n",0
000117  0a00    
000119  00                DCB      0
00011a  00                DCB      0
00011b  00                DCB      0
                  |L4.284|
00011c  c1acbdd3          DCB      193,172,189,211,213,253,179,163,"\r\n",0
000120  d5fdb3a3
000124  0d0a00  
000127  00                DCB      0
                  |L4.296|
000128  746370c1          DCB      "tcp",193,180,189,211,182,170,202,167,0
00012c  b4bdd3b6
000130  aacaa700

                          AREA ||i.M8266_ReLink||, CODE, READONLY, ALIGN=2

                  M8266_ReLink PROC
;;;199    
;;;200    void M8266_ReLink(u8 status )
000000  b53e              PUSH     {r1-r5,lr}
;;;201    {
000002  4604              MOV      r4,r0
;;;202    	if(status==1)//closed
000004  2c01              CMP      r4,#1
000006  d10b              BNE      |L5.32|
;;;203    	{
;;;204    		while(!M8266WIFI_Module_Init_Via_SPI())
000008  e006              B        |L5.24|
                  |L5.10|
;;;205    		{
;;;206    			printf("正在重连wifi\r\n");
00000a  a015              ADR      r0,|L5.96|
00000c  f7fffffe          BL       __2printf
;;;207    			mDelay(500);
000010  f44f70fa          MOV      r0,#0x1f4
000014  f7fffffe          BL       mDelay
                  |L5.24|
000018  f7fffffe          BL       M8266WIFI_Module_Init_Via_SPI
00001c  2800              CMP      r0,#0                 ;204
00001e  d0f4              BEQ      |L5.10|
                  |L5.32|
;;;208    
;;;209    	
;;;210    		}
;;;211    		
;;;212    	}
;;;213    	if(status==2) //lost
000020  2c02              CMP      r4,#2
000022  d117              BNE      |L5.84|
;;;214    	{
;;;215    		while(M8266WIFI_SPI_Setup_Connection(TEST_CONNECTION_TYPE, 80, TEST_REMOTE_ADDR, TEST_REMOTE_PORT, link_no, 20, &link_status)==0)
000024  e006              B        |L5.52|
                  |L5.38|
;;;216    		{		 
;;;217    		  mDelay(500);
000026  f44f70fa          MOV      r0,#0x1f4
00002a  f7fffffe          BL       mDelay
;;;218    			printf("正在重连服务器\r\n");
00002e  a010              ADR      r0,|L5.112|
000030  f7fffffe          BL       __2printf
                  |L5.52|
000034  4813              LDR      r0,|L5.132|
000036  2114              MOVS     r1,#0x14              ;215
000038  4a13              LDR      r2,|L5.136|
00003a  7812              LDRB     r2,[r2,#0]            ;215  ; link_no
00003c  f44f735b          MOV      r3,#0x36c             ;215
000040  e9cd2100          STRD     r2,r1,[sp,#0]         ;215
000044  9002              STR      r0,[sp,#8]            ;215
000046  a211              ADR      r2,|L5.140|
000048  2150              MOVS     r1,#0x50              ;215
00004a  2001              MOVS     r0,#1                 ;215
00004c  f7fffffe          BL       M8266WIFI_SPI_Setup_Connection
000050  2800              CMP      r0,#0                 ;215
000052  d0e8              BEQ      |L5.38|
                  |L5.84|
;;;219    		;
;;;220    		}
;;;221    		
;;;222    	}
;;;223    	
;;;224    	UsartPrintf(USART_DEBUG, "重新连接\r\n");
000054  a111              ADR      r1,|L5.156|
000056  4814              LDR      r0,|L5.168|
000058  f7fffffe          BL       UsartPrintf
;;;225    	
;;;226    }
00005c  bd3e              POP      {r1-r5,pc}
;;;227    
                          ENDP

00005e  0000              DCW      0x0000
                  |L5.96|
000060  d5fdd4da          DCB      213,253,212,218,214,216,193,172,"wifi\r\n",0
000064  d6d8c1ac
000068  77696669
00006c  0d0a00  
00006f  00                DCB      0
                  |L5.112|
000070  d5fdd4da          DCB      213,253,212,218,214,216,193,172,183,254,206,241,198,247,"\r"
000074  d6d8c1ac
000078  b7fecef1
00007c  c6f70d  
00007f  0a00              DCB      "\n",0
000081  00                DCB      0
000082  00                DCB      0
000083  00                DCB      0
                  |L5.132|
                          DCD      link_status
                  |L5.136|
                          DCD      link_no
                  |L5.140|
00008c  3138332e          DCB      "183.230.40.39",0
000090  3233302e
000094  34302e33
000098  3900    
00009a  00                DCB      0
00009b  00                DCB      0
                  |L5.156|
00009c  d6d8d0c2          DCB      214,216,208,194,193,172,189,211,"\r\n",0
0000a0  c1acbdd3
0000a4  0d0a00  
0000a7  00                DCB      0
                  |L5.168|
                          DCD      0x40013800

                          AREA ||i.M8266_SendData||, CODE, READONLY, ALIGN=1

                  M8266_SendData PROC
;;;88     
;;;89     void M8266_SendData(unsigned char *data, unsigned short len)
000000  4770              BX       lr
;;;90     {
;;;91     	
;;;92     	
;;;93     	
;;;94     }
;;;95     
                          ENDP


                          AREA ||i.M8266_WaitRecive||, CODE, READONLY, ALIGN=2

                  M8266_WaitRecive PROC
;;;96     
;;;97     u8 M8266_WaitRecive()
000000  480a              LDR      r0,|L7.44|
;;;98     {
;;;99     	
;;;100    	if(received == 0) 							//如果接收计数为0 则说明没有处于接收数据中，所以直接跳出，结束函数
000002  8800              LDRH     r0,[r0,#0]  ; received
000004  b908              CBNZ     r0,|L7.10|
;;;101    		return REV_WAIT;
000006  2000              MOVS     r0,#0
                  |L7.8|
;;;102    		
;;;103    	if(received == pre_received)				//如果上一次的值和这次相同，则说明接收完毕
;;;104    	{
;;;105    		received = 0;							//清0接收计数
;;;106    	
;;;107    		return REV_OK;								//返回接收完成标志
;;;108    	}		
;;;109    	pre_received = received;					//置为相同
;;;110    	
;;;111    	return REV_WAIT;								//返回接收未完成标志
;;;112    	
;;;113    	/*
;;;114    	if(M8266WIFI_SPI_Has_DataReceived())
;;;115    			{
;;;116    				//u16 M8266WIFI_SPI_RecvData(u8 data[], u16 max_len, uint16_t max_wait_in_ms, u8* link_no, u16* status);
;;;117    	      received = M8266WIFI_SPI_RecvData(M8266buf, RECV_DATA_MAX_SIZE, 5*1000, &link_no, &link_status);
;;;118    
;;;119    			  if(  (link_status&0xFF)!= 0 )  
;;;120    			  {
;;;121    				    if( (link_status&0xFF)==0x22 )      // 0x22 = Module buffer has no data received
;;;122    				    {  
;;;123    			         return 0;
;;;124    				    }
;;;125              }
;;;126    					else
;;;127    						{
;;;128    							printf("接受失败");
;;;129    							return 0;
;;;130    					   
;;;131    						}
;;;132    				
;;;133    				}
;;;134    			else
;;;135    			return 0;
;;;136    			*/
;;;137    			
;;;138    			}
000008  4770              BX       lr
                  |L7.10|
00000a  4808              LDR      r0,|L7.44|
00000c  8800              LDRH     r0,[r0,#0]            ;103  ; received
00000e  4908              LDR      r1,|L7.48|
000010  8809              LDRH     r1,[r1,#0]            ;103  ; pre_received
000012  4288              CMP      r0,r1                 ;103
000014  d104              BNE      |L7.32|
000016  2000              MOVS     r0,#0                 ;105
000018  4904              LDR      r1,|L7.44|
00001a  8008              STRH     r0,[r1,#0]            ;105
00001c  2001              MOVS     r0,#1                 ;107
00001e  e7f3              B        |L7.8|
                  |L7.32|
000020  4802              LDR      r0,|L7.44|
000022  8800              LDRH     r0,[r0,#0]            ;109  ; received
000024  4902              LDR      r1,|L7.48|
000026  8008              STRH     r0,[r1,#0]            ;109
000028  2000              MOVS     r0,#0                 ;111
00002a  e7ed              B        |L7.8|
;;;139    
                          ENDP

                  |L7.44|
                          DCD      received
                  |L7.48|
                          DCD      pre_received

                          AREA ||i.M8266_init||, CODE, READONLY, ALIGN=2

                  M8266_init PROC
;;;49     
;;;50     void M8266_init()
000000  b50e              PUSH     {r1-r3,lr}
;;;51     {
;;;52     	
;;;53     
;;;54     
;;;55     	M8266HostIf_Init();
000002  f7fffffe          BL       M8266HostIf_Init
;;;56     	while(!M8266WIFI_Module_Init_Via_SPI())
000006  e015              B        |L8.52|
                  |L8.8|
;;;57     	{
;;;58     		
;;;59     		
;;;60     		LED_RED;
000008  2020              MOVS     r0,#0x20
00000a  4934              LDR      r1,|L8.220|
00000c  6008              STR      r0,[r1,#0]
00000e  2001              MOVS     r0,#1
000010  1f09              SUBS     r1,r1,#4
000012  6008              STR      r0,[r1,#0]
000014  2002              MOVS     r0,#2
000016  6008              STR      r0,[r1,#0]
;;;61     		mDelay(500);
000018  f44f70fa          MOV      r0,#0x1f4
00001c  f7fffffe          BL       mDelay
;;;62     		
;;;63     		LED_GREEN;
000020  2020              MOVS     r0,#0x20
000022  492e              LDR      r1,|L8.220|
000024  1f09              SUBS     r1,r1,#4
000026  6008              STR      r0,[r1,#0]
000028  2001              MOVS     r0,#1
00002a  1d09              ADDS     r1,r1,#4
00002c  6008              STR      r0,[r1,#0]
00002e  2002              MOVS     r0,#2
000030  1f09              SUBS     r1,r1,#4
000032  6008              STR      r0,[r1,#0]
                  |L8.52|
000034  f7fffffe          BL       M8266WIFI_Module_Init_Via_SPI
000038  2800              CMP      r0,#0                 ;56
00003a  d0e5              BEQ      |L8.8|
;;;64     	
;;;65     	}
;;;66     	printf("wifi init\r\n");
00003c  a028              ADR      r0,|L8.224|
00003e  f7fffffe          BL       __2printf
;;;67     	 while(M8266WIFI_SPI_Config_Tcp_Window_num(link_no, 4, &link_status)==0)
000042  e015              B        |L8.112|
                  |L8.68|
;;;68       {
;;;69     		LED_RED;
000044  2020              MOVS     r0,#0x20
000046  4925              LDR      r1,|L8.220|
000048  6008              STR      r0,[r1,#0]
00004a  2001              MOVS     r0,#1
00004c  1f09              SUBS     r1,r1,#4
00004e  6008              STR      r0,[r1,#0]
000050  2002              MOVS     r0,#2
000052  6008              STR      r0,[r1,#0]
;;;70     		mDelay(500);
000054  f44f70fa          MOV      r0,#0x1f4
000058  f7fffffe          BL       mDelay
;;;71     		LED_GREEN;	
00005c  2020              MOVS     r0,#0x20
00005e  491f              LDR      r1,|L8.220|
000060  1f09              SUBS     r1,r1,#4
000062  6008              STR      r0,[r1,#0]
000064  2001              MOVS     r0,#1
000066  1d09              ADDS     r1,r1,#4
000068  6008              STR      r0,[r1,#0]
00006a  2002              MOVS     r0,#2
00006c  1f09              SUBS     r1,r1,#4
00006e  6008              STR      r0,[r1,#0]
                  |L8.112|
000070  4a1e              LDR      r2,|L8.236|
000072  2104              MOVS     r1,#4                 ;67
000074  481e              LDR      r0,|L8.240|
000076  7800              LDRB     r0,[r0,#0]            ;67  ; link_no
000078  f7fffffe          BL       M8266WIFI_SPI_Config_Tcp_Window_num
00007c  2800              CMP      r0,#0                 ;67
00007e  d0e1              BEQ      |L8.68|
;;;72     	}
;;;73     	printf("wifi config\r\n");
000080  a01c              ADR      r0,|L8.244|
000082  f7fffffe          BL       __2printf
;;;74     
;;;75     	while(M8266WIFI_SPI_Setup_Connection(TEST_CONNECTION_TYPE, 80, TEST_REMOTE_ADDR, TEST_REMOTE_PORT, link_no, 20, &link_status)==0)
000086  e018              B        |L8.186|
                  |L8.136|
;;;76     	{		
;;;77     		LED_RED;
000088  2020              MOVS     r0,#0x20
00008a  4914              LDR      r1,|L8.220|
00008c  6008              STR      r0,[r1,#0]
00008e  2001              MOVS     r0,#1
000090  1f09              SUBS     r1,r1,#4
000092  6008              STR      r0,[r1,#0]
000094  2002              MOVS     r0,#2
000096  6008              STR      r0,[r1,#0]
;;;78     		mDelay(500);
000098  f44f70fa          MOV      r0,#0x1f4
00009c  f7fffffe          BL       mDelay
;;;79     			printf("wifi connecting\r\n");
0000a0  a018              ADR      r0,|L8.260|
0000a2  f7fffffe          BL       __2printf
;;;80     		LED_GREEN;	
0000a6  2020              MOVS     r0,#0x20
0000a8  490c              LDR      r1,|L8.220|
0000aa  1f09              SUBS     r1,r1,#4
0000ac  6008              STR      r0,[r1,#0]
0000ae  2001              MOVS     r0,#1
0000b0  1d09              ADDS     r1,r1,#4
0000b2  6008              STR      r0,[r1,#0]
0000b4  2002              MOVS     r0,#2
0000b6  1f09              SUBS     r1,r1,#4
0000b8  6008              STR      r0,[r1,#0]
                  |L8.186|
0000ba  480c              LDR      r0,|L8.236|
0000bc  2114              MOVS     r1,#0x14              ;75
0000be  4a0c              LDR      r2,|L8.240|
0000c0  7812              LDRB     r2,[r2,#0]            ;75  ; link_no
0000c2  f44f735b          MOV      r3,#0x36c             ;75
0000c6  e9cd2100          STRD     r2,r1,[sp,#0]         ;75
0000ca  9002              STR      r0,[sp,#8]            ;75
0000cc  a212              ADR      r2,|L8.280|
0000ce  2150              MOVS     r1,#0x50              ;75
0000d0  2001              MOVS     r0,#1                 ;75
0000d2  f7fffffe          BL       M8266WIFI_SPI_Setup_Connection
0000d6  2800              CMP      r0,#0                 ;75
0000d8  d0d6              BEQ      |L8.136|
;;;81     	}
;;;82     
;;;83     		
;;;84     	
;;;85     	
;;;86     	
;;;87     }
0000da  bd0e              POP      {r1-r3,pc}
;;;88     
                          ENDP

                  |L8.220|
                          DCD      0x40010c14
                  |L8.224|
0000e0  77696669          DCB      "wifi init\r\n",0
0000e4  20696e69
0000e8  740d0a00
                  |L8.236|
                          DCD      link_status
                  |L8.240|
                          DCD      link_no
                  |L8.244|
0000f4  77696669          DCB      "wifi config\r\n",0
0000f8  20636f6e
0000fc  6669670d
000100  0a00    
000102  00                DCB      0
000103  00                DCB      0
                  |L8.260|
000104  77696669          DCB      "wifi connecting\r\n",0
000108  20636f6e
00010c  6e656374
000110  696e670d
000114  0a00    
000116  00                DCB      0
000117  00                DCB      0
                  |L8.280|
000118  3138332e          DCB      "183.230.40.39",0
00011c  3233302e
000120  34302e33
000124  3900    
000126  00                DCB      0
000127  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  M8266buf
                          %        128

                          AREA ||.data||, DATA, ALIGN=2

                  received
000000  0000              DCW      0x0000
                  pre_received
000002  0000              DCW      0x0000
                  total_received
                          DCD      0x00000000
                  MBytes
                          DCD      0x00000000
                  link_status
00000c  0000              DCB      0x00,0x00
                  link_no
00000e  00                DCB      0x00
                  STA_Status
00000f  00                DCB      0x00
                  TCP_Status
000010  00                DCB      0x00
